/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2025-06-30 15:22:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import java.text.NumberFormat;
import java.util.Locale;
import com.mycompany.model.Product;

public final class product_002ddetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/includes/mobile-sidebar.jsp", Long.valueOf(1750910348256L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("com.mycompany.model.Product");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


    // Lấy thông tin sản phẩm từ request parameter hoặc attribute
    String productIdParam = request.getParameter("id");
    Long productId = null;
    
    if (productIdParam != null && !productIdParam.trim().isEmpty()) {
        try {
            productId = Long.parseLong(productIdParam);
        } catch (NumberFormatException e) {
            response.sendRedirect(request.getContextPath() + "/all-products.jsp");
            return;
        }
    }
    
    // Nếu không có ID, redirect về trang all-products
    if (productId == null) {
        response.sendRedirect(request.getContextPath() + "/all-products.jsp");
        return;
    }
    
    // Format number cho giá tiền (VND)
    NumberFormat vndFormat = NumberFormat.getInstance(new Locale("vi", "VN"));

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Chi tiết sản phẩm - 43 Gundam Hobby</title>\r\n");
      out.write("    <meta name=\"description\" content=\"Xem chi tiết sản phẩm mô hình Gundam chính hãng tại 43 Gundam Hobby\">\r\n");
      out.write("    <meta name=\"keywords\" content=\"gundam, mô hình, bandai, chi tiết sản phẩm\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Bootstrap & FontAwesome -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Custom CSS -->\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/styles.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/navbar-darkmode.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/navbar-bg-orange.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/navbar-menu-white.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/hamburger-menu.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/product-detail.css\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Google OAuth Handler -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/google-oauth-handler.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Google Fonts -->\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Header -->\r\n");
      out.write("    <header class=\"bg-white shadow-sm sticky-top\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row align-items-center py-3\">\r\n");
      out.write("                <!-- Logo Section with Hamburger Menu -->\r\n");
      out.write("                <div class=\"col-lg-3 col-md-4 col-6\">\r\n");
      out.write("                    <div class=\"header-logo-section\">\r\n");
      out.write("                        <!-- Hamburger Menu (Mobile) -->\r\n");
      out.write("                        <button class=\"hamburger-menu\" id=\"hamburgerBtn\" aria-label=\"Menu\">\r\n");
      out.write("                            <span class=\"line\"></span>\r\n");
      out.write("                            <span class=\"line\"></span>\r\n");
      out.write("                            <span class=\"line\"></span>\r\n");
      out.write("                        </button>\r\n");
      out.write("                        \r\n");
      out.write("                        <div class=\"logo\">\r\n");
      out.write("                            <a href=\"");
      out.print(request.getContextPath());
      out.write("/\">\r\n");
      out.write("                                <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/logo.png\" alt=\"43 Gundam Logo\" class=\"logo-img\">\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- Search Section -->\r\n");
      out.write("                <div class=\"col-lg-6 col-md-4 col-12 order-md-2 order-3\">\r\n");
      out.write("                    <div class=\"header-center-section\">\r\n");
      out.write("                        <div class=\"search-container\">\r\n");
      out.write("                            <form class=\"search-form\" action=\"");
      out.print(request.getContextPath());
      out.write("/search\" method=\"get\">\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" name=\"q\" placeholder=\"Tìm kiếm sản phẩm...\" aria-label=\"Search\">\r\n");
      out.write("                                    <button class=\"btn btn-search\" type=\"submit\">\r\n");
      out.write("                                        <i class=\"fas fa-search\"></i>\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- User Actions Section -->\r\n");
      out.write("                <div class=\"col-lg-3 col-md-4 col-6 order-md-3 order-2\">\r\n");
      out.write("                    <div class=\"header-actions-section\">\r\n");
      out.write("                        <!-- Account Menu -->\r\n");
      out.write("                        <div class=\"account-menu me-3\">\r\n");
      out.write("                            <!-- User Info (visible when logged in) -->\r\n");
      out.write("                            <div id=\"nav-user-info\" class=\"d-none\"></div>\r\n");
      out.write("                            \r\n");
      out.write("                            <!-- Login Button (visible when not logged in) -->\r\n");
      out.write("                            <div id=\"nav-login-btn\">\r\n");
      out.write("                                <div class=\"dropdown\">\r\n");
      out.write("                                    <a href=\"#\" class=\"btn btn-outline-primary dropdown-toggle\" \r\n");
      out.write("                                       id=\"accountDropdown\" role=\"button\" data-bs-toggle=\"dropdown\">\r\n");
      out.write("                                        <i class=\"fas fa-user me-1\"></i>\r\n");
      out.write("                                        <span class=\"d-none d-md-inline\">Tài khoản</span>\r\n");
      out.write("                                    </a>\r\n");
      out.write("                                    <ul class=\"dropdown-menu dropdown-menu-end\">\r\n");
      out.write("                                        <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/login.jsp\">\r\n");
      out.write("                                            <i class=\"fas fa-sign-in-alt me-2\"></i>Đăng nhập\r\n");
      out.write("                                        </a></li>\r\n");
      out.write("                                        <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/register.jsp\">\r\n");
      out.write("                                            <i class=\"fas fa-user-plus me-2\"></i>Đăng ký\r\n");
      out.write("                                        </a></li>\r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                        <!-- Cart Button -->\r\n");
      out.write("                        <div class=\"cart-btn\">\r\n");
      out.write("                            <a href=\"cart.jsp\" class=\"btn btn-primary\">\r\n");
      out.write("                                <i class=\"fas fa-shopping-cart me-1\"></i>\r\n");
      out.write("                                <span class=\"cart-count\">0</span>\r\n");
      out.write("                                <span class=\"d-none d-lg-inline ms-1\">Giỏ hàng</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- Include Sidebar Navigation -->\r\n");
      out.write("    ");
      out.write("<!-- Universal Sidebar Navigation (works on all screen sizes) -->\r\n");
      out.write("<div class=\"mobile-sidebar\" id=\"mobileSidebar\">\r\n");
      out.write("    <button class=\"sidebar-close\" id=\"sidebarClose\" aria-label=\"ÄÃ³ng menu\">&times;</button>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"sidebar-header\">\r\n");
      out.write("        <h4><i class=\"fas fa-rocket me-2\"></i>GundamHobby Menu</h4>\r\n");
      out.write("        <p class=\"mb-0 text-muted small\">â¨ KhÃ¡m phÃ¡ tháº¿ giá»i mÃ´ hÃ¬nh tuyá»t vá»i</p>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Category Section in Sidebar -->\r\n");
      out.write("    <div class=\"category-section\">\r\n");
      out.write("        <h5><i class=\"fas fa-layer-group me-2\"></i>Danh Má»¥c Sáº£n Pháº©m</h5>\r\n");
      out.write("        <ul class=\"category-list\">\r\n");
      out.write("            <li><a href=\"#\"><i class=\"fas fa-robot me-2\"></i>Gundam Bandai</a></li>\r\n");
      out.write("            <li><a href=\"#\"><i class=\"fas fa-industry me-2\"></i>MÃ´ hÃ¬nh Trung</a></li>\r\n");
      out.write("            <li><a href=\"#\"><i class=\"fas fa-gem me-2\"></i>Metal Build - Diecast</a></li>\r\n");
      out.write("            <li><a href=\"#\"><i class=\"fas fa-tools me-2\"></i>Dá»¥ng cá»¥ - Tool</a></li>\r\n");
      out.write("            <li><a href=\"#\"><i class=\"fas fa-puzzle-piece me-2\"></i>Phá»¥ kiá»n - Base</a></li>\r\n");
      out.write("            <li><a href=\"#\"><i class=\"fas fa-dragon me-2\"></i>MÃ´ hÃ¬nh Dragon Ball</a></li>\r\n");
      out.write("            <li><a href=\"#\"><i class=\"fas fa-palette me-2\"></i>SÆ¡n - Decal</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <ul class=\"sidebar-menu\">\r\n");
      out.write("        <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/\"><i class=\"fas fa-home me-2\"></i>Trang chá»§</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/all-products.jsp\"><i class=\"fas fa-th-large me-2\"></i>Táº¥t cáº£ sáº£n pháº©m</a></li>\r\n");
      out.write("        <li><a href=\"#\"><i class=\"fas fa-star me-2\"></i>HÃ ng má»i vá»</a></li>\r\n");
      out.write("        <li><a href=\"#\"><i class=\"fas fa-clock me-2\"></i>HÃ ng Pre-order</a></li>\r\n");
      out.write("        <li>\r\n");
      out.write("            <a href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#phukienSubmenu\" aria-expanded=\"false\">\r\n");
      out.write("                <i class=\"fas fa-cubes me-2\"></i>Phá»¥ kiá»n & MÃ´ hÃ¬nh <i class=\"fas fa-chevron-down float-end\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("            <ul class=\"collapse submenu\" id=\"phukienSubmenu\">\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-tools me-2\"></i>Dá»¥ng cá»¥ - Tool</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-puzzle-piece me-2\"></i>Phá»¥ kiá»n - Base</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-dragon me-2\"></i>MÃ´ hÃ¬nh Dragon Ball</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("            <a href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#bandaiSubmenu\" aria-expanded=\"false\">\r\n");
      out.write("                <i class=\"fas fa-robot me-2\"></i>Bandai Collection <i class=\"fas fa-chevron-down float-end\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("            <ul class=\"collapse submenu\" id=\"bandaiSubmenu\">\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-award me-2\"></i>High Grade (HG)</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-trophy me-2\"></i>Master Grade (MG)</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-medal me-2\"></i>Real Grade (RG)</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-crown me-2\"></i>Perfect Grade (PG)</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li><a href=\"#\"><i class=\"fas fa-heart me-2\"></i>YÃªu thÃ­ch</a></li>\r\n");
      out.write("        <li><a href=\"#\"><i class=\"fas fa-user me-2\"></i>TÃ i khoáº£n</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Additional Info Section for Desktop -->\r\n");
      out.write("    <div class=\"sidebar-footer d-none d-lg-block\">\r\n");
      out.write("        <div class=\"contact-info mt-4 p-3 rounded\">\r\n");
      out.write("            <h6 class=\"mb-3\"><i class=\"fas fa-headset me-2\"></i>LiÃªn há» há» trá»£</h6>\r\n");
      out.write("            <p class=\"mb-2 small\"><i class=\"fas fa-map-marker-alt me-2\"></i>59 LÃª ÄÃ¬nh DiÃªn, Cáº©m Lá», ÄÃ  Náºµng</p>\r\n");
      out.write("            <p class=\"mb-2 small\"><i class=\"fas fa-phone-alt me-2\"></i>0385 546 145</p>\r\n");
      out.write("            <p class=\"mb-2 small\"><i class=\"fas fa-envelope me-2\"></i>43gundamhobby@gmail.com</p>\r\n");
      out.write("            <p class=\"mb-0 small\"><i class=\"fas fa-clock me-2\"></i>8:00 - 22:00 hÃ ng ngÃ y</p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Sidebar Overlay -->\r\n");
      out.write("<div class=\"mobile-overlay\" id=\"mobileOverlay\"></div>\r\n");
      out.write("<!-- Product Detail Container -->\r\n");
      out.write("    <div class=\"product-detail-container\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <!-- Breadcrumb -->\r\n");
      out.write("            <div class=\"breadcrumb-section\">\r\n");
      out.write("                <nav aria-label=\"breadcrumb\">\r\n");
      out.write("                    <ol class=\"breadcrumb\">\r\n");
      out.write("                        <li class=\"breadcrumb-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/\"><i class=\"fas fa-home me-1\"></i>Trang chủ</a></li>\r\n");
      out.write("                        <li class=\"breadcrumb-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/all-products.jsp\">Sản phẩm</a></li>\r\n");
      out.write("                        <li class=\"breadcrumb-item active\" aria-current=\"page\" id=\"productBreadcrumb\">Chi tiết sản phẩm</li>\r\n");
      out.write("                    </ol>\r\n");
      out.write("                </nav>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Loading State -->\r\n");
      out.write("            <div id=\"loadingState\" class=\"text-center py-5\">\r\n");
      out.write("                <div class=\"spinner-border text-primary\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n");
      out.write("                    <span class=\"visually-hidden\">Đang tải...</span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p class=\"mt-3 text-muted\">Đang tải thông tin sản phẩm...</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Error State -->\r\n");
      out.write("            <div id=\"errorState\" class=\"alert alert-danger text-center\" style=\"display: none;\">\r\n");
      out.write("                <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n");
      out.write("                <span id=\"errorMessage\">Có lỗi xảy ra khi tải thông tin sản phẩm.</span>\r\n");
      out.write("                <div class=\"mt-3\">\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/all-products.jsp\" class=\"btn btn-primary\">\r\n");
      out.write("                        <i class=\"fas fa-arrow-left me-2\"></i>Quay lại danh sách sản phẩm\r\n");
      out.write("                    </a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Product Main Info -->\r\n");
      out.write("            <div id=\"productMain\" class=\"product-main\" style=\"display: none;\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <!-- Product Images -->\r\n");
      out.write("                    <div class=\"col-lg-6 col-md-6\">\r\n");
      out.write("                        <div class=\"product-image-gallery\">\r\n");
      out.write("                            <div class=\"main-product-image\">\r\n");
      out.write("                                <div class=\"product-badges\" id=\"productBadges\">\r\n");
      out.write("                                    <!-- Badges will be inserted here dynamically -->\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <img id=\"mainProductImg\" src=\"\" alt=\"Product Image\" class=\"img-fluid\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"product-thumbnails\" id=\"productThumbnails\">\r\n");
      out.write("                                <!-- Thumbnails will be inserted here if available -->\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <!-- Product Info -->\r\n");
      out.write("                    <div class=\"col-lg-6 col-md-6\">\r\n");
      out.write("                        <div class=\"product-info\">\r\n");
      out.write("                            <h1 class=\"product-title\" id=\"productTitle\">Tên sản phẩm</h1>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"product-meta\" id=\"productMeta\">\r\n");
      out.write("                                <!-- Meta info will be inserted here -->\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"product-price\" id=\"productPrice\">\r\n");
      out.write("                                <!-- Price will be inserted here -->\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"stock-status\" id=\"stockStatus\">\r\n");
      out.write("                                <!-- Stock status will be inserted here -->\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"quantity-section\">\r\n");
      out.write("                                <span class=\"quantity-label\">Số lượng:</span>\r\n");
      out.write("                                <div class=\"quantity-control\">\r\n");
      out.write("                                    <button type=\"button\" class=\"quantity-btn\" id=\"decreaseQty\">\r\n");
      out.write("                                        <i class=\"fas fa-minus\"></i>\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                    <input type=\"number\" class=\"quantity-input\" id=\"quantityInput\" value=\"1\" min=\"1\" max=\"10\">\r\n");
      out.write("                                    <button type=\"button\" class=\"quantity-btn\" id=\"increaseQty\">\r\n");
      out.write("                                        <i class=\"fas fa-plus\"></i>\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"product-actions\">\r\n");
      out.write("                                <div class=\"action-buttons\">\r\n");
      out.write("                                    <button type=\"button\" class=\"btn btn-add-cart\" id=\"addToCartBtn\">\r\n");
      out.write("                                        <i class=\"fas fa-cart-plus me-2\"></i>Thêm vào giỏ hàng\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                    <button type=\"button\" class=\"btn btn-buy-now\" id=\"buyNowBtn\">\r\n");
      out.write("                                        <i class=\"fas fa-bolt me-2\"></i>Mua ngay\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                    <button type=\"button\" class=\"btn btn-wishlist\" id=\"wishlistBtn\" title=\"Thêm vào yêu thích\">\r\n");
      out.write("                                        <i class=\"far fa-heart\"></i>\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Product Description -->\r\n");
      out.write("            <div id=\"productDescription\" class=\"product-description\" style=\"display: none;\">\r\n");
      out.write("                <h2 class=\"section-title\">\r\n");
      out.write("                    <i class=\"fas fa-info-circle me-2\"></i>Mô tả sản phẩm\r\n");
      out.write("                </h2>\r\n");
      out.write("                <div class=\"description-content\" id=\"descriptionContent\">\r\n");
      out.write("                    <!-- Description will be inserted here -->\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Product Specifications -->\r\n");
      out.write("            <div id=\"productSpecifications\" class=\"product-specifications\" style=\"display: none;\">\r\n");
      out.write("                <h2 class=\"section-title\">\r\n");
      out.write("                    <i class=\"fas fa-list-ul me-2\"></i>Thông số kỹ thuật\r\n");
      out.write("                </h2>\r\n");
      out.write("                <div class=\"table-responsive\">\r\n");
      out.write("                    <table class=\"spec-table\">\r\n");
      out.write("                        <tbody id=\"specTableBody\">\r\n");
      out.write("                            <!-- Specifications will be inserted here -->\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Product Reviews Section -->\r\n");
      out.write("            <div class=\"product-reviews\">\r\n");
      out.write("                <div class=\"reviews-header\">\r\n");
      out.write("                    <h2 class=\"section-title\">\r\n");
      out.write("                        <i class=\"fas fa-star me-2\"></i>Đánh giá sản phẩm\r\n");
      out.write("                    </h2>\r\n");
      out.write("                    <div class=\"rating-summary\">\r\n");
      out.write("                        <div class=\"overall-rating\">\r\n");
      out.write("                            <div class=\"rating-score\">\r\n");
      out.write("                                <span class=\"score\" id=\"overallScore\">4.5</span>\r\n");
      out.write("                                <div class=\"rating-stars\" id=\"overallStars\">\r\n");
      out.write("                                    <i class=\"fas fa-star\"></i>\r\n");
      out.write("                                    <i class=\"fas fa-star\"></i>\r\n");
      out.write("                                    <i class=\"fas fa-star\"></i>\r\n");
      out.write("                                    <i class=\"fas fa-star\"></i>\r\n");
      out.write("                                    <i class=\"fas fa-star-half-alt\"></i>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"total-reviews\" id=\"totalReviews\">(23 đánh giá)</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"rating-breakdown\">\r\n");
      out.write("                            <div class=\"rating-bar\">\r\n");
      out.write("                                <span class=\"rating-label\">5 sao</span>\r\n");
      out.write("                                <div class=\"bar-container\">\r\n");
      out.write("                                    <div class=\"bar-fill\" style=\"width: 60%\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"rating-count\">14</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"rating-bar\">\r\n");
      out.write("                                <span class=\"rating-label\">4 sao</span>\r\n");
      out.write("                                <div class=\"bar-container\">\r\n");
      out.write("                                    <div class=\"bar-fill\" style=\"width: 30%\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"rating-count\">7</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"rating-bar\">\r\n");
      out.write("                                <span class=\"rating-label\">3 sao</span>\r\n");
      out.write("                                <div class=\"bar-container\">\r\n");
      out.write("                                    <div class=\"bar-fill\" style=\"width: 8%\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"rating-count\">2</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"rating-bar\">\r\n");
      out.write("                                <span class=\"rating-label\">2 sao</span>\r\n");
      out.write("                                <div class=\"bar-container\">\r\n");
      out.write("                                    <div class=\"bar-fill\" style=\"width: 0%\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"rating-count\">0</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"rating-bar\">\r\n");
      out.write("                                <span class=\"rating-label\">1 sao</span>\r\n");
      out.write("                                <div class=\"bar-container\">\r\n");
      out.write("                                    <div class=\"bar-fill\" style=\"width: 2%\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"rating-count\">0</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Add Review Form -->\r\n");
      out.write("                <div class=\"add-review\" id=\"addReviewSection\">\r\n");
      out.write("                    <h3 class=\"review-form-title\">\r\n");
      out.write("                        <i class=\"fas fa-edit me-2\"></i>Viết đánh giá\r\n");
      out.write("                    </h3>\r\n");
      out.write("                    \r\n");
      out.write("                    <!-- DEBUG: Test API Button (remove in production) -->\r\n");
      out.write("                    <div class=\"mb-3 p-2 bg-light border rounded\">\r\n");
      out.write("                        <small class=\"text-muted\">DEBUG: Test API connection</small><br>\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-sm btn-secondary\" onclick=\"testReviewsAPI()\">\r\n");
      out.write("                            <i class=\"fas fa-bug me-1\"></i>Test Reviews API\r\n");
      out.write("                        </button>\r\n");
      out.write("                        <div id=\"apiTestResult\" class=\"mt-2\"></div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <form class=\"review-form\" id=\"reviewForm\">\r\n");
      out.write("                        <div class=\"rating-input mb-3\">\r\n");
      out.write("                            <label class=\"form-label\">Đánh giá của bạn *</label>\r\n");
      out.write("                            <div class=\"star-rating\" id=\"starRating\">\r\n");
      out.write("                                <span class=\"star\" data-rating=\"1\"><i class=\"far fa-star\"></i></span>\r\n");
      out.write("                                <span class=\"star\" data-rating=\"2\"><i class=\"far fa-star\"></i></span>\r\n");
      out.write("                                <span class=\"star\" data-rating=\"3\"><i class=\"far fa-star\"></i></span>\r\n");
      out.write("                                <span class=\"star\" data-rating=\"4\"><i class=\"far fa-star\"></i></span>\r\n");
      out.write("                                <span class=\"star\" data-rating=\"5\"><i class=\"far fa-star\"></i></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <input type=\"hidden\" id=\"ratingValue\" name=\"rating\" value=\"0\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label for=\"reviewComment\" class=\"form-label\">Nội dung đánh giá *</label>\r\n");
      out.write("                            <textarea class=\"form-control\" id=\"reviewComment\" name=\"comment\" rows=\"4\" \r\n");
      out.write("                                placeholder=\"Chia sẻ trải nghiệm của bạn về sản phẩm này...\" required></textarea>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">\r\n");
      out.write("                            <i class=\"fas fa-paper-plane me-2\"></i>Gửi đánh giá\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Reviews List -->\r\n");
      out.write("                <div class=\"reviews-list\" id=\"reviewsList\">\r\n");
      out.write("                    <div class=\"reviews-header-controls\">\r\n");
      out.write("                        <h3>Tất cả đánh giá</h3>\r\n");
      out.write("                        <div class=\"review-filters\">\r\n");
      out.write("                            <select class=\"form-select\" id=\"reviewFilter\">\r\n");
      out.write("                                <option value=\"all\">Tất cả đánh giá</option>\r\n");
      out.write("                                <option value=\"5\">5 sao</option>\r\n");
      out.write("                                <option value=\"4\">4 sao</option>\r\n");
      out.write("                                <option value=\"3\">3 sao</option>\r\n");
      out.write("                                <option value=\"2\">2 sao</option>\r\n");
      out.write("                                <option value=\"1\">1 sao</option>\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- Review items sẽ được render động bằng JS từ API, xoá hết review mẫu tĩnh ở đây -->\r\n");
      out.write("                    <div id=\"dynamicReviews\"></div>\r\n");
      out.write("                    <!-- Load More Reviews -->\r\n");
      out.write("                    <div class=\"text-center mt-4\">\r\n");
      out.write("                        <button class=\"btn btn-outline-primary\" id=\"loadMoreReviews\">\r\n");
      out.write("                            <i class=\"fas fa-chevron-down me-2\"></i>Xem thêm đánh giá\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Related Products -->\r\n");
      out.write("            <div id=\"relatedProducts\" class=\"related-products\" style=\"display: none;\">\r\n");
      out.write("                <h2 class=\"section-title\">\r\n");
      out.write("                    <i class=\"fas fa-cubes me-2\"></i>Sản phẩm liên quan\r\n");
      out.write("                </h2>\r\n");
      out.write("                <div class=\"related-products-grid\" id=\"relatedProductsGrid\">\r\n");
      out.write("                    <!-- Related products will be inserted here -->\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Footer -->\r\n");
      out.write("    <footer class=\"bg-dark text-white\">\r\n");
      out.write("        <div class=\"footer-top py-5\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-lg-4 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h5 class=\"footer-title\">43 Gundam Hobby</h5>\r\n");
      out.write("                            <p class=\"footer-desc\">Chuyên cung cấp mô hình Gundam chính hãng với giá tốt nhất. Uy tín - Chất lượng - Dịch vụ tận tâm.</p>\r\n");
      out.write("                            <div class=\"store-info\">\r\n");
      out.write("                                <div class=\"info-item mb-2\">\r\n");
      out.write("                                    <i class=\"fas fa-map-marker-alt me-2\"></i>\r\n");
      out.write("                                    <span>59 Lê Đình Diên, Cẩm Lệ, Đà Nẵng</span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"info-item mb-2\">\r\n");
      out.write("                                    <i class=\"fas fa-phone me-2\"></i>\r\n");
      out.write("                                    <a href=\"tel:0385546145\" class=\"text-white\">0385546145 (8h-20h)</a>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"info-item\">\r\n");
      out.write("                                    <i class=\"fas fa-envelope me-2\"></i>\r\n");
      out.write("                                    <a href=\"mailto:43gundamhobby@gmail.com\" class=\"text-white\">43gundamhobby@gmail.com</a>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h6 class=\"footer-title\">Sản phẩm</h6>\r\n");
      out.write("                            <ul class=\"footer-links\">\r\n");
      out.write("                                <li><a href=\"#\">Gundam Bandai</a></li>\r\n");
      out.write("                                <li><a href=\"#\">High Grade (HG)</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Master Grade (MG)</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Real Grade (RG)</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Perfect Grade (PG)</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Metal Build</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h6 class=\"footer-title\">Dịch vụ</h6>\r\n");
      out.write("                            <ul class=\"footer-links\">\r\n");
      out.write("                                <li><a href=\"#\">Hàng Pre-Order</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Dụng cụ & Phụ kiện</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Hướng dẫn lắp ráp</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Sơn & Trang trí</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Bảo hành sản phẩm</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h6 class=\"footer-title\">Chính sách</h6>\r\n");
      out.write("                            <ul class=\"footer-links\">\r\n");
      out.write("                                <li><a href=\"#\">Chính sách bảo mật</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Chính sách thanh toán</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Chính sách vận chuyển</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Chính sách đổi trả</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Quy định sử dụng</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h6 class=\"footer-title\">Hỗ trợ</h6>\r\n");
      out.write("                            <ul class=\"footer-links\">\r\n");
      out.write("                                <li><a href=\"#\">Liên hệ</a></li>\r\n");
      out.write("                                <li><a href=\"#\">FAQ</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Hướng dẫn đặt hàng</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Tra cứu đơn hàng</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Hỗ trợ kỹ thuật</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer-social py-4 bg-darker\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row align-items-center\">\r\n");
      out.write("                    <div class=\"col-md-6\">\r\n");
      out.write("                        <h6 class=\"social-title mb-3\">Theo dõi chúng tôi</h6>\r\n");
      out.write("                        <div class=\"social-links\">\r\n");
      out.write("                            <a href=\"#\" class=\"social-link facebook\">\r\n");
      out.write("                                <i class=\"fab fa-facebook-f\"></i>\r\n");
      out.write("                                <span>Facebook</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                            <a href=\"#\" class=\"social-link youtube\">\r\n");
      out.write("                                <i class=\"fab fa-youtube\"></i>\r\n");
      out.write("                                <span>Youtube</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                            <a href=\"#\" class=\"social-link tiktok\">\r\n");
      out.write("                                <i class=\"fab fa-tiktok\"></i>\r\n");
      out.write("                                <span>TikTok</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                            <a href=\"#\" class=\"social-link instagram\">\r\n");
      out.write("                                <i class=\"fab fa-instagram\"></i>\r\n");
      out.write("                                <span>Instagram</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-md-6\">\r\n");
      out.write("                        <div class=\"newsletter\">\r\n");
      out.write("                            <h6 class=\"newsletter-title mb-3\">Đăng ký nhận tin</h6>\r\n");
      out.write("                            <form class=\"newsletter-form\">\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"email\" class=\"form-control\" placeholder=\"Nhập email của bạn...\">\r\n");
      out.write("                                    <button class=\"btn btn-primary\" type=\"submit\">\r\n");
      out.write("                                        <i class=\"fas fa-paper-plane\"></i>\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer-bottom py-3 bg-darker border-top border-secondary\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row align-items-center\">\r\n");
      out.write("                    <div class=\"col-md-6\">\r\n");
      out.write("                        <p class=\"copyright mb-0\">&copy; 2025 43 Gundam Hobby. All rights reserved.</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-md-6 text-md-end\">\r\n");
      out.write("                        <div class=\"payment-methods\">\r\n");
      out.write("                            <img src=\"https://via.placeholder.com/40x25/cccccc/666666?text=VISA\" alt=\"Visa\" class=\"payment-icon\">\r\n");
      out.write("                            <img src=\"https://via.placeholder.com/40x25/cccccc/666666?text=MC\" alt=\"Mastercard\" class=\"payment-icon\">\r\n");
      out.write("                            <img src=\"https://via.placeholder.com/40x25/cccccc/666666?text=COD\" alt=\"COD\" class=\"payment-icon\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <!-- Back to Top Button -->\r\n");
      out.write("    <button class=\"back-to-top\" id=\"backToTop\">\r\n");
      out.write("        <i class=\"fas fa-chevron-up\"></i>\r\n");
      out.write("    </button>\r\n");
      out.write("\r\n");
      out.write("    <!-- Scripts -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Hamburger Menu Script -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/hamburger-menu.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Product Detail Script -->\r\n");
      out.write("    <script>\r\n");
      out.write("        // Product ID from server\r\n");
      out.write("        const productId = '");
      out.print( productId );
      out.write("';\r\n");
      out.write("        const contextPath = '");
      out.print( request.getContextPath() );
      out.write("';\r\n");
      out.write("        \r\n");
      out.write("        // Load product data when page loads\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            // Log product ID for debugging\r\n");
      out.write("            console.log('Product ID from JSP:', productId);\r\n");
      out.write("            console.log('Context path:', contextPath);\r\n");
      out.write("            \r\n");
      out.write("            // Load product data first\r\n");
      out.write("            loadProductData();\r\n");
      out.write("            \r\n");
      out.write("            // Setup event listeners\r\n");
      out.write("            setupEventListeners();\r\n");
      out.write("            \r\n");
      out.write("            // Ensure reviews load after page is ready - with multiple attempts for robustness\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                console.log('Loading reviews (first attempt)...');\r\n");
      out.write("                loadProductReviews(productId);\r\n");
      out.write("            }, 500);\r\n");
      out.write("            \r\n");
      out.write("            // Backup attempt in case first one fails\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                console.log('Loading reviews (backup attempt)...');\r\n");
      out.write("                const dynamicReviews = document.getElementById('dynamicReviews');\r\n");
      out.write("                if (dynamicReviews && dynamicReviews.innerHTML.trim() === '') {\r\n");
      out.write("                    console.log('No reviews loaded yet, trying again...');\r\n");
      out.write("                    loadProductReviews(productId);\r\n");
      out.write("                }\r\n");
      out.write("            }, 2000);\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // Load product data from API\r\n");
      out.write("        async function loadProductData() {\r\n");
      out.write("            try {\r\n");
      out.write("                const response = await fetch(contextPath + '/api/products/' + productId);\r\n");
      out.write("                const data = await response.json();\r\n");
      out.write("                \r\n");
      out.write("                if (data.success && data.data) {\r\n");
      out.write("                    displayProduct(data.data);\r\n");
      out.write("                    document.getElementById('loadingState').style.display = 'none';\r\n");
      out.write("                    \r\n");
      out.write("                    // Load reviews for this product\r\n");
      out.write("                    loadProductReviews(productId);\r\n");
      out.write("                } else {\r\n");
      out.write("                    showError(data.message || 'Không tìm thấy sản phẩm');\r\n");
      out.write("                }\r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                console.error('Error loading product:', error);\r\n");
      out.write("                showError('Có lỗi xảy ra khi tải thông tin sản phẩm');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Display product information\r\n");
      out.write("        function displayProduct(product) {\r\n");
      out.write("            // Update page title and breadcrumb\r\n");
      out.write("            document.title = product.name + ' - 43 Gundam Hobby';\r\n");
      out.write("            document.getElementById('productBreadcrumb').textContent = product.name;\r\n");
      out.write("            \r\n");
      out.write("            // Display main product info\r\n");
      out.write("            document.getElementById('productTitle').textContent = product.name;\r\n");
      out.write("            \r\n");
      out.write("            // Display product image\r\n");
      out.write("            const defaultImage = contextPath + '/img/RGStrikeGundam.jpg';\r\n");
      out.write("            const productImage = product.imageUrl || defaultImage;\r\n");
      out.write("            document.getElementById('mainProductImg').src = productImage;\r\n");
      out.write("            document.getElementById('mainProductImg').alt = product.name;\r\n");
      out.write("            \r\n");
      out.write("            // Display product meta\r\n");
      out.write("            displayProductMeta(product);\r\n");
      out.write("            \r\n");
      out.write("            // Display price\r\n");
      out.write("            displayProductPrice(product);\r\n");
      out.write("            \r\n");
      out.write("            // Display stock status\r\n");
      out.write("            displayStockStatus(product);\r\n");
      out.write("            \r\n");
      out.write("            // Display description\r\n");
      out.write("            displayProductDescription(product);\r\n");
      out.write("            \r\n");
      out.write("            // Display specifications\r\n");
      out.write("            displayProductSpecifications(product);\r\n");
      out.write("            \r\n");
      out.write("            // Load related products\r\n");
      out.write("            loadRelatedProducts(product);\r\n");
      out.write("            \r\n");
      out.write("            // Show all sections\r\n");
      out.write("            document.getElementById('productMain').style.display = 'block';\r\n");
      out.write("            document.getElementById('productDescription').style.display = 'block';\r\n");
      out.write("            document.getElementById('productSpecifications').style.display = 'block';\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Display product meta information\r\n");
      out.write("        function displayProductMeta(product) {\r\n");
      out.write("            let metaHtml = '';\r\n");
      out.write("            \r\n");
      out.write("            if (product.category) {\r\n");
      out.write("                metaHtml += '<div class=\"product-category\"><i class=\"fas fa-tag\"></i><span>' + getCategoryDisplayName(product.category) + '</span></div>';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if (product.grade) {\r\n");
      out.write("                metaHtml += '<div class=\"product-grade\"><i class=\"fas fa-star\"></i><span>' + product.grade + '</span></div>';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if (product.brand) {\r\n");
      out.write("                metaHtml += '<div class=\"product-brand\"><i class=\"fas fa-industry\"></i><span>' + product.brand + '</span></div>';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            document.getElementById('productMeta').innerHTML = metaHtml;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Display product price\r\n");
      out.write("        function displayProductPrice(product) {\r\n");
      out.write("            const price = parseFloat(product.price);\r\n");
      out.write("            const formattedPrice = new Intl.NumberFormat('vi-VN', {\r\n");
      out.write("                style: 'currency',\r\n");
      out.write("                currency: 'VND'\r\n");
      out.write("            }).format(price);\r\n");
      out.write("            \r\n");
      out.write("            const priceHtml = '<div class=\"current-price\">' + formattedPrice + '</div>';\r\n");
      out.write("            document.getElementById('productPrice').innerHTML = priceHtml;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Display stock status\r\n");
      out.write("        function displayStockStatus(product) {\r\n");
      out.write("            const stock = parseInt(product.stockQuantity);\r\n");
      out.write("            let statusClass, statusIcon, statusText;\r\n");
      out.write("            \r\n");
      out.write("            if (stock > 10) {\r\n");
      out.write("                statusClass = 'in-stock';\r\n");
      out.write("                statusIcon = 'fas fa-check-circle';\r\n");
      out.write("                statusText = 'Còn hàng';\r\n");
      out.write("            } else if (stock > 0) {\r\n");
      out.write("                statusClass = 'low-stock';\r\n");
      out.write("                statusIcon = 'fas fa-exclamation-triangle';\r\n");
      out.write("                statusText = 'Chỉ còn ' + stock + ' sản phẩm';\r\n");
      out.write("            } else {\r\n");
      out.write("                statusClass = 'out-of-stock';\r\n");
      out.write("                statusIcon = 'fas fa-times-circle';\r\n");
      out.write("                statusText = 'Hết hàng';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            const statusHtml = '<i class=\"' + statusIcon + '\"></i><span>' + statusText + '</span>';\r\n");
      out.write("            \r\n");
      out.write("            const statusElement = document.getElementById('stockStatus');\r\n");
      out.write("            statusElement.className = 'stock-status ' + statusClass;\r\n");
      out.write("            statusElement.innerHTML = statusHtml;\r\n");
      out.write("            \r\n");
      out.write("            // Update quantity input max value\r\n");
      out.write("            const qtyInput = document.getElementById('quantityInput');\r\n");
      out.write("            qtyInput.max = Math.max(1, stock);\r\n");
      out.write("            \r\n");
      out.write("            // Disable buttons if out of stock\r\n");
      out.write("            const addToCartBtn = document.getElementById('addToCartBtn');\r\n");
      out.write("            const buyNowBtn = document.getElementById('buyNowBtn');\r\n");
      out.write("            \r\n");
      out.write("            if (stock <= 0) {\r\n");
      out.write("                addToCartBtn.disabled = true;\r\n");
      out.write("                addToCartBtn.innerHTML = '<i class=\"fas fa-times me-2\"></i>Hết hàng';\r\n");
      out.write("                buyNowBtn.disabled = true;\r\n");
      out.write("                buyNowBtn.innerHTML = '<i class=\"fas fa-times me-2\"></i>Hết hàng';\r\n");
      out.write("                qtyInput.disabled = true;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Display product description\r\n");
      out.write("        function displayProductDescription(product) {\r\n");
      out.write("            const description = product.description || 'Chưa có mô tả chi tiết cho sản phẩm này.';\r\n");
      out.write("            document.getElementById('descriptionContent').innerHTML = '<p>' + description + '</p>';\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Display product specifications\r\n");
      out.write("        function displayProductSpecifications(product) {\r\n");
      out.write("            const specs = [\r\n");
      out.write("                { label: 'Tên sản phẩm', value: product.name },\r\n");
      out.write("                { label: 'Thương hiệu', value: product.brand || 'N/A' },\r\n");
      out.write("                { label: 'Danh mục', value: getCategoryDisplayName(product.category) },\r\n");
      out.write("                { label: 'Cấp độ', value: product.grade || 'N/A' },\r\n");
      out.write("                { label: 'Tình trạng', value: product.isActive ? 'Đang bán' : 'Ngừng bán' },\r\n");
      out.write("                { label: 'Số lượng tồn kho', value: product.stockQuantity || 0 }\r\n");
      out.write("            ];\r\n");
      out.write("            \r\n");
      out.write("            let specHtml = '';\r\n");
      out.write("            specs.forEach(spec => {\r\n");
      out.write("                specHtml += '<tr><th>' + spec.label + '</th><td>' + spec.value + '</td></tr>';\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            document.getElementById('specTableBody').innerHTML = specHtml;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Load related products\r\n");
      out.write("        async function loadRelatedProducts(product) {\r\n");
      out.write("            try {\r\n");
      out.write("                let relatedProducts = [];\r\n");
      out.write("                \r\n");
      out.write("                // Try to get products from same category\r\n");
      out.write("                if (product.category) {\r\n");
      out.write("                    const response = await fetch(contextPath + '/api/products/category/' + product.category);\r\n");
      out.write("                    const data = await response.json();\r\n");
      out.write("                    \r\n");
      out.write("                    if (data.success && data.data) {\r\n");
      out.write("                        relatedProducts = data.data.filter(p => p.id !== product.id).slice(0, 8);\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                // If not enough, get latest products\r\n");
      out.write("                if (relatedProducts.length < 4) {\r\n");
      out.write("                    const response = await fetch(contextPath + '/api/products/latest?limit=8');\r\n");
      out.write("                    const data = await response.json();\r\n");
      out.write("                    \r\n");
      out.write("                    if (data.success && data.data) {\r\n");
      out.write("                        const latestProducts = data.data.filter(p => p.id !== product.id);\r\n");
      out.write("                        relatedProducts = [...relatedProducts, ...latestProducts].slice(0, 8);\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                if (relatedProducts.length > 0) {\r\n");
      out.write("                    displayRelatedProducts(relatedProducts);\r\n");
      out.write("                    document.getElementById('relatedProducts').style.display = 'block';\r\n");
      out.write("                }\r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                console.error('Error loading related products:', error);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Display related products\r\n");
      out.write("        function displayRelatedProducts(products) {\r\n");
      out.write("            let html = '';\r\n");
      out.write("            products.forEach(product => {\r\n");
      out.write("                const price = parseFloat(product.price);\r\n");
      out.write("                const formattedPrice = new Intl.NumberFormat('vi-VN', {\r\n");
      out.write("                    style: 'currency',\r\n");
      out.write("                    currency: 'VND'\r\n");
      out.write("                }).format(price);\r\n");
      out.write("                \r\n");
      out.write("                const defaultImage = contextPath + '/img/RGStrikeGundam.jpg';\r\n");
      out.write("                const productImage = product.imageUrl || defaultImage;\r\n");
      out.write("                \r\n");
      out.write("                html += '<div class=\"related-product-card\">' +\r\n");
      out.write("                    '<div class=\"related-product-image\">' +\r\n");
      out.write("                        '<img src=\"' + productImage + '\" alt=\"' + product.name + '\" onerror=\"this.src=\\'' + defaultImage + '\\'\">' +\r\n");
      out.write("                    '</div>' +\r\n");
      out.write("                    '<div class=\"related-product-info\">' +\r\n");
      out.write("                        '<h6 class=\"related-product-title\">' + product.name + '</h6>' +\r\n");
      out.write("                        '<div class=\"related-product-price\">' + formattedPrice + '</div>' +\r\n");
      out.write("                        '<button class=\"related-product-btn\" onclick=\"window.location.href=\\'' + contextPath + '/product-detail.jsp?id=' + product.id + '\\'\">' +\r\n");
      out.write("                            '<i class=\"fas fa-eye me-1\"></i>Xem chi tiết' +\r\n");
      out.write("                        '</button>' +\r\n");
      out.write("                    '</div>' +\r\n");
      out.write("                '</div>';\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            document.getElementById('relatedProductsGrid').innerHTML = html;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Show error message\r\n");
      out.write("        function showError(message) {\r\n");
      out.write("            document.getElementById('loadingState').style.display = 'none';\r\n");
      out.write("            document.getElementById('errorMessage').textContent = message;\r\n");
      out.write("            document.getElementById('errorState').style.display = 'block';\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Get category display name\r\n");
      out.write("        function getCategoryDisplayName(category) {\r\n");
      out.write("            const categoryNames = {\r\n");
      out.write("                'GUNDAM_BANDAI': 'Gundam Bandai',\r\n");
      out.write("                'PRE_ORDER': 'Pre-Order',\r\n");
      out.write("                'TOOLS_ACCESSORIES': 'Dụng cụ & Phụ kiện'\r\n");
      out.write("            };\r\n");
      out.write("            return categoryNames[category] || category;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Setup event listeners\r\n");
      out.write("        function setupEventListeners() {\r\n");
      out.write("            // Quantity controls\r\n");
      out.write("            document.getElementById('decreaseQty').addEventListener('click', function() {\r\n");
      out.write("                const input = document.getElementById('quantityInput');\r\n");
      out.write("                const currentValue = parseInt(input.value);\r\n");
      out.write("                if (currentValue > parseInt(input.min)) {\r\n");
      out.write("                    input.value = currentValue - 1;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            document.getElementById('increaseQty').addEventListener('click', function() {\r\n");
      out.write("                const input = document.getElementById('quantityInput');\r\n");
      out.write("                const currentValue = parseInt(input.value);\r\n");
      out.write("                if (currentValue < parseInt(input.max)) {\r\n");
      out.write("                    input.value = currentValue + 1;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            // Add to cart button\r\n");
      out.write("            document.getElementById('addToCartBtn').addEventListener('click', function() {\r\n");
      out.write("                const quantity = document.getElementById('quantityInput').value;\r\n");
      out.write("                fetch(contextPath + '/api/cart/add', {\r\n");
      out.write("                    method: 'POST',\r\n");
      out.write("                    headers: { 'Content-Type': 'application/json' },\r\n");
      out.write("                    credentials: 'same-origin',\r\n");
      out.write("                    body: JSON.stringify({ productId: Number(productId), quantity: Number(quantity) })\r\n");
      out.write("                })\r\n");
      out.write("                .then(res => res.json())\r\n");
      out.write("                .then(data => {\r\n");
      out.write("                    if (data.success) {\r\n");
      out.write("                        this.innerHTML = '<i class=\"fas fa-check me-2\"></i>Đã thêm vào giỏ';\r\n");
      out.write("                        this.classList.add('btn-success');\r\n");
      out.write("                        this.classList.remove('btn-add-cart');\r\n");
      out.write("                    } else {\r\n");
      out.write("                        alert(data.message || 'Có lỗi xảy ra!');\r\n");
      out.write("                    }\r\n");
      out.write("                    setTimeout(() => {\r\n");
      out.write("                        this.innerHTML = '<i class=\"fas fa-cart-plus me-2\"></i>Thêm vào giỏ hàng';\r\n");
      out.write("                        this.classList.remove('btn-success');\r\n");
      out.write("                        this.classList.add('btn-add-cart');\r\n");
      out.write("                    }, 2000);\r\n");
      out.write("                })\r\n");
      out.write("                .catch(() => {\r\n");
      out.write("                    alert('Không thể thêm vào giỏ hàng. Vui lòng thử lại!');\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            // Buy now button\r\n");
      out.write("            document.getElementById('buyNowBtn').addEventListener('click', function() {\r\n");
      out.write("                const quantity = document.getElementById('quantityInput').value;\r\n");
      out.write("                // Add your buy now logic here\r\n");
      out.write("                alert(`Mua ngay ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${quantity}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" sản phẩm`);\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            // Wishlist button\r\n");
      out.write("            document.getElementById('wishlistBtn').addEventListener('click', function() {\r\n");
      out.write("                const icon = this.querySelector('i');\r\n");
      out.write("                if (icon.classList.contains('far')) {\r\n");
      out.write("                    icon.classList.remove('far');\r\n");
      out.write("                    icon.classList.add('fas');\r\n");
      out.write("                    this.style.color = '#e74c3c';\r\n");
      out.write("                } else {\r\n");
      out.write("                    icon.classList.remove('fas');\r\n");
      out.write("                    icon.classList.add('far');\r\n");
      out.write("                    this.style.color = '';\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Back to top functionality\r\n");
      out.write("        const backToTopBtn = document.getElementById('backToTop');\r\n");
      out.write("        \r\n");
      out.write("        window.addEventListener('scroll', () => {\r\n");
      out.write("            if (window.pageYOffset > 300) {\r\n");
      out.write("                backToTopBtn.classList.add('show');\r\n");
      out.write("            } else {\r\n");
      out.write("                backToTopBtn.classList.remove('show');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        backToTopBtn.addEventListener('click', () => {\r\n");
      out.write("            window.scrollTo({\r\n");
      out.write("                top: 0,\r\n");
      out.write("                behavior: 'smooth'\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // ===== REVIEW FUNCTIONALITY =====\r\n");
      out.write("        \r\n");
      out.write("        // Star Rating Functionality\r\n");
      out.write("        const starRating = document.getElementById('starRating');\r\n");
      out.write("        const ratingValue = document.getElementById('ratingValue');\r\n");
      out.write("        const stars = starRating.querySelectorAll('.star');\r\n");
      out.write("        \r\n");
      out.write("        stars.forEach((star, index) => {\r\n");
      out.write("            star.addEventListener('mouseenter', () => {\r\n");
      out.write("                highlightStars(index + 1);\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            star.addEventListener('mouseleave', () => {\r\n");
      out.write("                highlightStars(parseInt(ratingValue.value));\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            star.addEventListener('click', () => {\r\n");
      out.write("                const rating = index + 1;\r\n");
      out.write("                ratingValue.value = rating;\r\n");
      out.write("                highlightStars(rating);\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        function highlightStars(rating) {\r\n");
      out.write("            stars.forEach((star, index) => {\r\n");
      out.write("                const icon = star.querySelector('i');\r\n");
      out.write("                if (index < rating) {\r\n");
      out.write("                    star.classList.add('active');\r\n");
      out.write("                    icon.className = 'fas fa-star';\r\n");
      out.write("                } else {\r\n");
      out.write("                    star.classList.remove('active');\r\n");
      out.write("                    icon.className = 'far fa-star';\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Review Form Submission\r\n");
      out.write("        const reviewForm = document.getElementById('reviewForm');\r\n");
      out.write("        reviewForm.addEventListener('submit', async (e) => {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            \r\n");
      out.write("            // Kiểm tra đăng nhập trước\r\n");
      out.write("            const userId = await getCurrentUserId();\r\n");
      out.write("            console.log('Got user ID for review:', userId);\r\n");
      out.write("            \r\n");
      out.write("            if (!userId) {\r\n");
      out.write("                const confirmLogin = confirm('Bạn cần đăng nhập để gửi đánh giá. Chuyển đến trang đăng nhập?');\r\n");
      out.write("                if (confirmLogin) {\r\n");
      out.write("                    window.location.href = contextPath + '/login.jsp?redirect=' + encodeURIComponent(window.location.href);\r\n");
      out.write("                }\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            const rating = parseInt(ratingValue.value);\r\n");
      out.write("            if (rating === 0) {\r\n");
      out.write("                alert('Vui lòng chọn số sao đánh giá!');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            const formData = new FormData(reviewForm);\r\n");
      out.write("            const comment = formData.get('comment')?.trim();\r\n");
      out.write("            \r\n");
      out.write("            if (!comment) {\r\n");
      out.write("                alert('Vui lòng nhập nội dung đánh giá!');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            const reviewData = {\r\n");
      out.write("                userId: userId,\r\n");
      out.write("                productId: parseInt(productId),\r\n");
      out.write("                rating: rating,\r\n");
      out.write("                comment: comment,\r\n");
      out.write("                isVerified: false\r\n");
      out.write("            };\r\n");
      out.write("            \r\n");
      out.write("            console.log('Sending review data:', reviewData);\r\n");
      out.write("            console.log('JSESSIONID cookie exists:', document.cookie.includes('JSESSIONID'));\r\n");
      out.write("            \r\n");
      out.write("            try {\r\n");
      out.write("                const submitButton = reviewForm.querySelector('button[type=\"submit\"]');\r\n");
      out.write("                const originalButtonText = submitButton.innerHTML;\r\n");
      out.write("                submitButton.disabled = true;\r\n");
      out.write("                submitButton.innerHTML = '<i class=\"fas fa-spinner fa-spin me-2\"></i>Đang gửi...';\r\n");
      out.write("                \r\n");
      out.write("                const response = await fetch(contextPath + '/api/reviews/product/' + productId, {\r\n");
      out.write("                    method: 'POST',\r\n");
      out.write("                    headers: { \r\n");
      out.write("                        'Content-Type': 'application/json',\r\n");
      out.write("                        'Accept': 'application/json'\r\n");
      out.write("                    },\r\n");
      out.write("                    credentials: 'same-origin', // Đảm bảo gửi cookie session\r\n");
      out.write("                    body: JSON.stringify(reviewData)\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("                console.log('Review submission response status:', response.status);\r\n");
      out.write("                \r\n");
      out.write("                if (!response.ok) {\r\n");
      out.write("                    throw new Error('HTTP error! status: ' + response.status);\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                const result = await response.json();\r\n");
      out.write("                console.log('Review submission result:', result);\r\n");
      out.write("                \r\n");
      out.write("                if (result.success) {\r\n");
      out.write("                    // Hiển thị thông báo thành công\r\n");
      out.write("                    const successAlert = document.createElement('div');\r\n");
      out.write("                    successAlert.className = 'alert alert-success alert-dismissible fade show';\r\n");
      out.write("                    successAlert.innerHTML = `\r\n");
      out.write("                        <i class=\"fas fa-check-circle me-2\"></i>Cảm ơn bạn đã đánh giá sản phẩm!\r\n");
      out.write("                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n");
      out.write("                    `;\r\n");
      out.write("                    reviewForm.insertAdjacentElement('beforebegin', successAlert);\r\n");
      out.write("                    \r\n");
      out.write("                    // Reset form\r\n");
      out.write("                    reviewForm.reset();\r\n");
      out.write("                    ratingValue.value = '0';\r\n");
      out.write("                    highlightStars(0);\r\n");
      out.write("                    \r\n");
      out.write("                    // Reload reviews after a short delay\r\n");
      out.write("                    setTimeout(() => {\r\n");
      out.write("                        loadProductReviews(productId);\r\n");
      out.write("                    }, 1000);\r\n");
      out.write("                    \r\n");
      out.write("                    // Tự động ẩn thông báo sau 5 giây\r\n");
      out.write("                    setTimeout(() => {\r\n");
      out.write("                        successAlert.remove();\r\n");
      out.write("                    }, 5000);\r\n");
      out.write("                } else {\r\n");
      out.write("                    throw new Error(result.message || 'Không thể gửi đánh giá');\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                console.error('Error submitting review:', error);\r\n");
      out.write("                let errorMessage = error.message || 'Có lỗi xảy ra khi gửi đánh giá. Vui lòng thử lại!';\r\n");
      out.write("                \r\n");
      out.write("                // Xử lý trường hợp chưa mua sản phẩm\r\n");
      out.write("                if (error.message && error.message.includes('chỉ có thể đánh giá sản phẩm đã mua')) {\r\n");
      out.write("                    errorMessage = `\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <p class=\"mb-2\">Bạn chỉ có thể đánh giá sản phẩm đã mua.</p>\r\n");
      out.write("                            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/order-history.jsp\" class=\"btn btn-sm btn-primary\">\r\n");
      out.write("                                <i class=\"fas fa-shopping-bag me-1\"></i>Xem lịch sử mua hàng\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    `;\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                const errorAlert = document.createElement('div');\r\n");
      out.write("                errorAlert.className = 'alert alert-danger alert-dismissible fade show';\r\n");
      out.write("                errorAlert.innerHTML = `\r\n");
      out.write("                    <i class=\"fas fa-exclamation-circle me-2\"></i>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMessage}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n");
      out.write("                `;\r\n");
      out.write("                reviewForm.insertAdjacentElement('beforebegin', errorAlert);\r\n");
      out.write("                \r\n");
      out.write("                // Tự động ẩn thông báo lỗi sau 5 giây\r\n");
      out.write("                setTimeout(() => {\r\n");
      out.write("                    errorAlert.remove();\r\n");
      out.write("                }, 5000);\r\n");
      out.write("            } finally {\r\n");
      out.write("                // Khôi phục nút submit\r\n");
      out.write("                const submitButton = reviewForm.querySelector('button[type=\"submit\"]');\r\n");
      out.write("                submitButton.disabled = false;\r\n");
      out.write("                submitButton.innerHTML = originalButtonText;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Hàm lấy ID người dùng hiện tại\r\n");
      out.write("        async function getCurrentUserId() {\r\n");
      out.write("            try {\r\n");
      out.write("                // Lấy userId từ session thông qua API\r\n");
      out.write("                const response = await fetch(contextPath + '/api/user-info', {\r\n");
      out.write("                    credentials: 'same-origin', // Đảm bảo gửi cookie session\r\n");
      out.write("                    headers: {\r\n");
      out.write("                        'Cache-Control': 'no-cache',\r\n");
      out.write("                        'Pragma': 'no-cache'\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("                const data = await response.json();\r\n");
      out.write("                \r\n");
      out.write("                // Debug - hiển thị thông tin user trả về\r\n");
      out.write("                console.log('User info response:', data);\r\n");
      out.write("                \r\n");
      out.write("                if (data.isLoggedIn && data.userId) {\r\n");
      out.write("                    console.log('Using user ID:', data.userId);\r\n");
      out.write("                    return data.userId;\r\n");
      out.write("                } else if (data.isLoggedIn) {\r\n");
      out.write("                    // Người dùng đã đăng nhập nhưng không có userId trong response\r\n");
      out.write("                    console.warn('User is logged in but no userId in response');\r\n");
      out.write("                    \r\n");
      out.write("                    // Kiểm tra cookie để debug\r\n");
      out.write("                    console.log('Document cookies:', document.cookie);\r\n");
      out.write("                    \r\n");
      out.write("                    // Fallback cho user đã đăng nhập nhưng không có userId\r\n");
      out.write("                    console.warn('Fallback to userId 3');\r\n");
      out.write("                    return 3; \r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                console.warn('User is not logged in according to API response');\r\n");
      out.write("                return null;\r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                console.error('Error getting user info:', error);\r\n");
      out.write("                return null;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Load Reviews for Product\r\n");
      out.write("        function loadProductReviews(productId) {\r\n");
      out.write("            console.log('Loading reviews for product ID:', productId);\r\n");
      out.write("            \r\n");
      out.write("            if (!productId) {\r\n");
      out.write("                console.error('Product ID is required to load reviews');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Load review statistics\r\n");
      out.write("            fetch(contextPath + '/api/reviews/product/' + productId + '/statistics')\r\n");
      out.write("            .then(response => {\r\n");
      out.write("                console.log('Statistics API response status:', response.status);\r\n");
      out.write("                if (!response.ok) {\r\n");
      out.write("                    throw new Error('Statistics API returned status: ' + response.status);\r\n");
      out.write("                }\r\n");
      out.write("                return response.json();\r\n");
      out.write("            })\r\n");
      out.write("            .then(data => {\r\n");
      out.write("                console.log('Review statistics response:', data);\r\n");
      out.write("                if (data.success && data.statistics) {\r\n");
      out.write("                    updateReviewStatistics(data.statistics);\r\n");
      out.write("                } else {\r\n");
      out.write("                    console.warn('Statistics API succeeded but no valid data:', data);\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("            .catch(error => {\r\n");
      out.write("                console.error('Error loading review statistics:', error);\r\n");
      out.write("                // Don't fail the whole process for statistics\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            // Load reviews list\r\n");
      out.write("            const reviewsUrl = contextPath + '/api/reviews/product/' + productId;\r\n");
      out.write("            console.log('Fetching reviews from URL:', reviewsUrl);\r\n");
      out.write("            \r\n");
      out.write("            fetch(reviewsUrl, {\r\n");
      out.write("                method: 'GET',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Accept': 'application/json',\r\n");
      out.write("                    'Cache-Control': 'no-cache'\r\n");
      out.write("                },\r\n");
      out.write("                credentials: 'same-origin'\r\n");
      out.write("            })\r\n");
      out.write("            .then(response => {\r\n");
      out.write("                console.log('Reviews API response status:', response.status);\r\n");
      out.write("                console.log('Reviews API response headers:', response.headers);\r\n");
      out.write("                \r\n");
      out.write("                if (!response.ok) {\r\n");
      out.write("                    throw new Error('Reviews API returned status: ' + response.status);\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                return response.text().then(text => {\r\n");
      out.write("                    console.log('Raw response text:', text);\r\n");
      out.write("                    try {\r\n");
      out.write("                        return JSON.parse(text);\r\n");
      out.write("                    } catch (parseError) {\r\n");
      out.write("                        console.error('JSON parse error:', parseError);\r\n");
      out.write("                        console.error('Response text that failed to parse:', text);\r\n");
      out.write("                        throw new Error('Invalid JSON response from reviews API');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            })\r\n");
      out.write("            .then(data => {\r\n");
      out.write("                console.log('Reviews list response data:', data);\r\n");
      out.write("                console.log('Data type:', typeof data);\r\n");
      out.write("                console.log('Data keys:', Object.keys(data || {}));\r\n");
      out.write("                \r\n");
      out.write("                if (data && data.success) {\r\n");
      out.write("                    // Handle different possible response structures\r\n");
      out.write("                    let reviewsArray = [];\r\n");
      out.write("                    \r\n");
      out.write("                    if (data.reviews && Array.isArray(data.reviews)) {\r\n");
      out.write("                        reviewsArray = data.reviews;\r\n");
      out.write("                    } else if (data.data && Array.isArray(data.data)) {\r\n");
      out.write("                        reviewsArray = data.data;\r\n");
      out.write("                    } else if (Array.isArray(data)) {\r\n");
      out.write("                        reviewsArray = data;\r\n");
      out.write("                    }\r\n");
      out.write("                    \r\n");
      out.write("                    console.log('Extracted reviews array:', reviewsArray);\r\n");
      out.write("                    console.log('Number of reviews found:', reviewsArray.length);\r\n");
      out.write("                    \r\n");
      out.write("                    if (reviewsArray.length > 0) {\r\n");
      out.write("                        console.log('Sample review data:', reviewsArray[0]);\r\n");
      out.write("                    }\r\n");
      out.write("                    \r\n");
      out.write("                    displayReviews(reviewsArray);\r\n");
      out.write("                } else {\r\n");
      out.write("                    console.error('Failed to load reviews:', data ? data.message : 'Unknown error');\r\n");
      out.write("                    console.log('Full error response:', data);\r\n");
      out.write("                    displayReviews([]);\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("            .catch(error => {\r\n");
      out.write("                console.error('Error loading reviews:', error);\r\n");
      out.write("                console.error('Error details:', error.message);\r\n");
      out.write("                displayReviews([]);\r\n");
      out.write("                \r\n");
      out.write("                // Show user-friendly error in the UI\r\n");
      out.write("                const dynamicReviews = document.getElementById('dynamicReviews');\r\n");
      out.write("                if (dynamicReviews) {\r\n");
      out.write("                    dynamicReviews.innerHTML = '<div class=\"alert alert-warning text-center\">' +\r\n");
      out.write("                        '<i class=\"fas fa-exclamation-triangle me-2\"></i>' +\r\n");
      out.write("                        'Không thể tải đánh giá. Vui lòng thử lại sau.' +\r\n");
      out.write("                    '</div>';\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function updateReviewStatistics(stats) {\r\n");
      out.write("            // Update overall score\r\n");
      out.write("            const overallScore = document.getElementById('overallScore');\r\n");
      out.write("            if (overallScore) {\r\n");
      out.write("                overallScore.textContent = stats.averageRating || '0';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Update total reviews count\r\n");
      out.write("            const totalReviews = document.getElementById('totalReviews');\r\n");
      out.write("            if (totalReviews) {\r\n");
      out.write("                totalReviews.textContent = '(' + (stats.totalReviews || 0) + ' đánh giá)';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Update star display\r\n");
      out.write("            const overallStars = document.getElementById('overallStars');\r\n");
      out.write("            if (overallStars) {\r\n");
      out.write("                const rating = stats.averageRating || 0;\r\n");
      out.write("                const fullStars = Math.floor(rating);\r\n");
      out.write("                const hasHalfStar = (rating % 1) >= 0.5;\r\n");
      out.write("                \r\n");
      out.write("                let starsHtml = '';\r\n");
      out.write("                for (let i = 0; i < 5; i++) {\r\n");
      out.write("                    if (i < fullStars) {\r\n");
      out.write("                        starsHtml += '<i class=\"fas fa-star\"></i>';\r\n");
      out.write("                    } else if (i === fullStars && hasHalfStar) {\r\n");
      out.write("                        starsHtml += '<i class=\"fas fa-star-half-alt\"></i>';\r\n");
      out.write("                    } else {\r\n");
      out.write("                        starsHtml += '<i class=\"far fa-star\"></i>';\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                overallStars.innerHTML = starsHtml;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Update rating breakdown bars\r\n");
      out.write("            if (stats.ratingBreakdown) {\r\n");
      out.write("                const ratingBars = document.querySelectorAll('.rating-bar');\r\n");
      out.write("                for (let i = 1; i <= 5; i++) {\r\n");
      out.write("                    const breakdownData = stats.ratingBreakdown[i + '_star'];\r\n");
      out.write("                    if (breakdownData && ratingBars[5-i]) {\r\n");
      out.write("                        const bar = ratingBars[5-i];\r\n");
      out.write("                        const fill = bar.querySelector('.bar-fill');\r\n");
      out.write("                        const count = bar.querySelector('.rating-count');\r\n");
      out.write("                        \r\n");
      out.write("                        if (fill) fill.style.width = breakdownData.percentage + '%';\r\n");
      out.write("                        if (count) count.textContent = breakdownData.count;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function displayReviews(reviews) {\r\n");
      out.write("            console.log('Displaying reviews:', reviews);\r\n");
      out.write("            const dynamicReviews = document.getElementById('dynamicReviews');\r\n");
      out.write("            if (!dynamicReviews) {\r\n");
      out.write("                console.error('dynamicReviews element not found');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Clear existing reviews\r\n");
      out.write("            dynamicReviews.innerHTML = '';\r\n");
      out.write("            \r\n");
      out.write("            if (!reviews || reviews.length === 0) {\r\n");
      out.write("                console.log('No reviews to display');\r\n");
      out.write("                const noReviewsHtml = '<div class=\"no-reviews text-center py-4\">' +\r\n");
      out.write("                    '<i class=\"fas fa-comment-slash fa-3x text-muted mb-3\"></i>' +\r\n");
      out.write("                    '<h5 class=\"text-muted\">Chưa có đánh giá nào</h5>' +\r\n");
      out.write("                    '<p class=\"text-muted\">Hãy là người đầu tiên đánh giá sản phẩm này!</p>' +\r\n");
      out.write("                '</div>';\r\n");
      out.write("                dynamicReviews.innerHTML = noReviewsHtml;\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Display reviews\r\n");
      out.write("            console.log('Creating HTML for ' + reviews.length + ' reviews');\r\n");
      out.write("            let reviewsHtml = '';\r\n");
      out.write("            reviews.forEach((review, index) => {\r\n");
      out.write("                try {\r\n");
      out.write("                    reviewsHtml += createReviewHtml(review);\r\n");
      out.write("                } catch (e) {\r\n");
      out.write("                    console.error('Error creating HTML for review #' + index, e);\r\n");
      out.write("                    console.error('Problem review:', review);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            dynamicReviews.innerHTML = reviewsHtml;\r\n");
      out.write("            \r\n");
      out.write("            // Re-attach review filter event listener\r\n");
      out.write("            const reviewFilter = document.getElementById('reviewFilter');\r\n");
      out.write("            if (reviewFilter) {\r\n");
      out.write("                // Remove existing listeners\r\n");
      out.write("                reviewFilter.removeEventListener('change', handleReviewFilter);\r\n");
      out.write("                reviewFilter.addEventListener('change', handleReviewFilter);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function handleReviewFilter(e) {\r\n");
      out.write("            const filterValue = e.target.value;\r\n");
      out.write("            const reviewItems = document.querySelectorAll('.review-item');\r\n");
      out.write("            \r\n");
      out.write("            reviewItems.forEach(item => {\r\n");
      out.write("                if (filterValue === 'all') {\r\n");
      out.write("                    item.style.display = 'block';\r\n");
      out.write("                } else {\r\n");
      out.write("                    const stars = item.querySelectorAll('.review-rating .fas.fa-star');\r\n");
      out.write("                    const reviewRating = stars.length;\r\n");
      out.write("                    \r\n");
      out.write("                    if (reviewRating == filterValue) {\r\n");
      out.write("                        item.style.display = 'block';\r\n");
      out.write("                    } else {\r\n");
      out.write("                        item.style.display = 'none';\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function createReviewHtml(review) {\r\n");
      out.write("            console.log('Creating HTML for review:', review);\r\n");
      out.write("            \r\n");
      out.write("            // Check if review is valid\r\n");
      out.write("            if (!review || typeof review !== 'object') {\r\n");
      out.write("                console.error('Invalid review object:', review);\r\n");
      out.write("                return '';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Ensure rating is valid (default to 1 if invalid)\r\n");
      out.write("            const rating = Math.max(1, Math.min(5, parseInt(review.rating) || 1));\r\n");
      out.write("            \r\n");
      out.write("            // Format stars based on rating\r\n");
      out.write("            const stars = generateStarsHtml(rating);\r\n");
      out.write("            \r\n");
      out.write("            // Use the timeAgo method from the Review object if available, otherwise format the date\r\n");
      out.write("            let timeDisplay = 'Vừa xong';\r\n");
      out.write("            if (review.timeAgo && review.timeAgo.trim() !== '') {\r\n");
      out.write("                timeDisplay = review.timeAgo;\r\n");
      out.write("            } else if (review.createdAt) {\r\n");
      out.write("                timeDisplay = formatDate(review.createdAt);\r\n");
      out.write("            } else if (review.created_at) {\r\n");
      out.write("                timeDisplay = formatDate(review.created_at);\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Verified badge display\r\n");
      out.write("            const isVerified = review.isVerified === true || review.isVerified === 'true' || review.is_verified === true || review.is_verified === 'true';\r\n");
      out.write("            const verifiedBadge = isVerified ? \r\n");
      out.write("                '<span class=\"verified-badge ms-2\"><i class=\"fas fa-check-circle\"></i> Đã mua hàng</span>' : '';\r\n");
      out.write("                \r\n");
      out.write("            // Display username or user ID\r\n");
      out.write("            let reviewerName = 'Khách hàng';\r\n");
      out.write("            if (review.userName && review.userName.trim() !== '') {\r\n");
      out.write("                reviewerName = review.userName;\r\n");
      out.write("            } else if (review.user_name && review.user_name.trim() !== '') {\r\n");
      out.write("                reviewerName = review.user_name;\r\n");
      out.write("            } else if (review.userEmail && review.userEmail.trim() !== '') {\r\n");
      out.write("                reviewerName = review.userEmail.split('@')[0]; // Use email prefix\r\n");
      out.write("            } else if (review.user_email && review.user_email.trim() !== '') {\r\n");
      out.write("                reviewerName = review.user_email.split('@')[0]; // Use email prefix\r\n");
      out.write("            } else {\r\n");
      out.write("                const userId = review.userId || review.user_id || 'unknown';\r\n");
      out.write("                reviewerName = `Người dùng #");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userId}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Ensure comment is valid\r\n");
      out.write("            const comment = (review.comment && review.comment.trim() !== '') ? review.comment.trim() : 'Người dùng chưa để lại bình luận.';\r\n");
      out.write("            \r\n");
      out.write("            // Debug log for this specific review\r\n");
      out.write("            console.log('Processing review:', {\r\n");
      out.write("                id: review.id,\r\n");
      out.write("                userId: review.userId,\r\n");
      out.write("                rating: rating,\r\n");
      out.write("                comment: review.comment,\r\n");
      out.write("                createdAt: review.createdAt,\r\n");
      out.write("                timeAgo: review.timeAgo,\r\n");
      out.write("                isVerified: review.isVerified\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            return '<div class=\"review-item\">' +\r\n");
      out.write("                '<div class=\"review-header\">' +\r\n");
      out.write("                    '<div class=\"reviewer-info\">' +\r\n");
      out.write("                        '<div class=\"reviewer-avatar\">' +\r\n");
      out.write("                            '<i class=\"fas fa-user-circle\"></i>' +\r\n");
      out.write("                        '</div>' +\r\n");
      out.write("                        '<div class=\"reviewer-details\">' +\r\n");
      out.write("                            '<h5 class=\"reviewer-name\">' + escapeHtml(reviewerName) + verifiedBadge + '</h5>' +\r\n");
      out.write("                            '<div class=\"review-rating\">' + stars + '</div>' +\r\n");
      out.write("                            '<span class=\"review-date\">' + timeDisplay + '</span>' +\r\n");
      out.write("                        '</div>' +\r\n");
      out.write("                    '</div>' +\r\n");
      out.write("                '</div>' +\r\n");
      out.write("                '<div class=\"review-content\">' +\r\n");
      out.write("                    (review.title ? '<h6 class=\"review-title\">' + escapeHtml(review.title) + '</h6>' : '') +\r\n");
      out.write("                    '<p class=\"review-text\">' + escapeHtml(comment) + '</p>' +\r\n");
      out.write("                    '<div class=\"review-actions\">' +\r\n");
      out.write("                        '<button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"markHelpful(' + (review.id || 0) + ')\">' +\r\n");
      out.write("                            '<i class=\"fas fa-thumbs-up me-1\"></i>Hữu ích (' + (review.helpfulCount || 0) + ')' +\r\n");
      out.write("                        '</button>' +\r\n");
      out.write("                    '</div>' +\r\n");
      out.write("                '</div>' +\r\n");
      out.write("            '</div>';\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function generateStarsHtml(rating) {\r\n");
      out.write("            let starsHtml = '';\r\n");
      out.write("            const safeRating = Math.max(1, Math.min(5, parseInt(rating) || 1));\r\n");
      out.write("            \r\n");
      out.write("            for (let i = 1; i <= 5; i++) {\r\n");
      out.write("                if (i <= safeRating) {\r\n");
      out.write("                    starsHtml += '<i class=\"fas fa-star\"></i>';\r\n");
      out.write("                } else {\r\n");
      out.write("                    starsHtml += '<i class=\"far fa-star\"></i>';\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            return starsHtml;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Hàm trực tiếp để lấy user id từ session\r\n");
      out.write("        function getUserIdFromSession() {\r\n");
      out.write("            const sessionValue = '");
      out.print( session.getAttribute("userId") );
      out.write("';\r\n");
      out.write("            console.log('User ID from JSP session:', sessionValue);\r\n");
      out.write("            \r\n");
      out.write("            if (sessionValue && sessionValue !== 'null') {\r\n");
      out.write("                const parsedId = parseInt(sessionValue);\r\n");
      out.write("                if (!isNaN(parsedId)) {\r\n");
      out.write("                    return parsedId;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            return 3; // Fallback to user ID 3 from logs\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function escapeHtml(text) {\r\n");
      out.write("            if (!text) return '';\r\n");
      out.write("            const div = document.createElement('div');\r\n");
      out.write("            div.textContent = text;\r\n");
      out.write("            return div.innerHTML;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function formatDate(dateString) {\r\n");
      out.write("            if (!dateString) return '';\r\n");
      out.write("            try {\r\n");
      out.write("                const date = new Date(dateString);\r\n");
      out.write("                const now = new Date();\r\n");
      out.write("                const diffMs = now - date;\r\n");
      out.write("                const diffMinutes = Math.floor(diffMs / (1000 * 60));\r\n");
      out.write("                \r\n");
      out.write("                if (diffMinutes < 60) {\r\n");
      out.write("                    return diffMinutes + ' phút trước';\r\n");
      out.write("                } else if (diffMinutes < 1440) {\r\n");
      out.write("                    return Math.floor(diffMinutes / 60) + ' giờ trước';\r\n");
      out.write("                } else if (diffMinutes < 10080) {\r\n");
      out.write("                    return Math.floor(diffMinutes / 1440) + ' ngày trước';\r\n");
      out.write("                } else {\r\n");
      out.write("                    return date.toLocaleDateString('vi-VN');\r\n");
      out.write("                }\r\n");
      out.write("            } catch (e) {\r\n");
      out.write("                return 'Vừa xong';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function markHelpful(reviewId) {\r\n");
      out.write("            alert('Cảm ơn phản hồi của bạn!');\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // DEBUG: Test function to check API\r\n");
      out.write("        function testReviewsAPI() {\r\n");
      out.write("            const resultDiv = document.getElementById('apiTestResult');\r\n");
      out.write("            resultDiv.innerHTML = '<small class=\"text-info\">Testing API...</small>';\r\n");
      out.write("            \r\n");
      out.write("            const testUrl = contextPath + '/api/reviews/product/' + productId;\r\n");
      out.write("            console.log('Testing API URL:', testUrl);\r\n");
      out.write("            \r\n");
      out.write("            fetch(testUrl, {\r\n");
      out.write("                method: 'GET',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Accept': 'application/json',\r\n");
      out.write("                    'Cache-Control': 'no-cache'\r\n");
      out.write("                },\r\n");
      out.write("                credentials: 'same-origin'\r\n");
      out.write("            })\r\n");
      out.write("            .then(response => {\r\n");
      out.write("                console.log('API Test - Response status:', response.status);\r\n");
      out.write("                console.log('API Test - Response headers:', response.headers);\r\n");
      out.write("                return response.text();\r\n");
      out.write("            })\r\n");
      out.write("            .then(text => {\r\n");
      out.write("                console.log('API Test - Raw response:', text);\r\n");
      out.write("                resultDiv.innerHTML = `<small class=\"text-success\">API Response: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${text.substring(0, 200)}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("...</small>`;\r\n");
      out.write("                \r\n");
      out.write("                try {\r\n");
      out.write("                    const data = JSON.parse(text);\r\n");
      out.write("                    console.log('API Test - Parsed data:', data);\r\n");
      out.write("                    \r\n");
      out.write("                    if (data.success && data.reviews) {\r\n");
      out.write("                        resultDiv.innerHTML += `<br><small class=\"text-success\">Found ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data.reviews.length}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" reviews</small>`;\r\n");
      out.write("                    }\r\n");
      out.write("                } catch (e) {\r\n");
      out.write("                    console.error('API Test - JSON parse error:', e);\r\n");
      out.write("                    resultDiv.innerHTML += `<br><small class=\"text-danger\">JSON Parse Error: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${e.message}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</small>`;\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("            .catch(error => {\r\n");
      out.write("                console.error('API Test - Error:', error);\r\n");
      out.write("                resultDiv.innerHTML = `<small class=\"text-danger\">API Error: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error.message}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</small>`;\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Review Filter\r\n");
      out.write("        const reviewFilter = document.getElementById('reviewFilter');\r\n");
      out.write("        if (reviewFilter) {\r\n");
      out.write("            reviewFilter.addEventListener('change', (e) => {\r\n");
      out.write("                const filterValue = e.target.value;\r\n");
      out.write("                const reviewItems = document.querySelectorAll('.review-item');\r\n");
      out.write("                \r\n");
      out.write("                reviewItems.forEach(item => {\r\n");
      out.write("                    if (filterValue === 'all') {\r\n");
      out.write("                        item.style.display = 'block';\r\n");
      out.write("                    } else {\r\n");
      out.write("                        const stars = item.querySelectorAll('.review-rating .fas.fa-star');\r\n");
      out.write("                        const reviewRating = stars.length;\r\n");
      out.write("                        \r\n");
      out.write("                        if (reviewRating == filterValue) {\r\n");
      out.write("                            item.style.display = 'block';\r\n");
      out.write("                        } else {\r\n");
      out.write("                            item.style.display = 'none';\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // ===== AUTHENTICATION & USER INFO =====\r\n");
      out.write("        \r\n");
      out.write("        function initializeUserAuth() {\r\n");
      out.write("            // Check multiple sources for user info\r\n");
      out.write("            const userInfo = getUserInfo();\r\n");
      out.write("            \r\n");
      out.write("            if (userInfo && userInfo.name) {\r\n");
      out.write("                displayUserInfo(userInfo);\r\n");
      out.write("            } else {\r\n");
      out.write("                displayLoginButton();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function getUserInfo() {\r\n");
      out.write("            // Check localStorage first\r\n");
      out.write("            let userInfo = localStorage.getItem('userInfo');\r\n");
      out.write("            if (userInfo) {\r\n");
      out.write("                try {\r\n");
      out.write("                    return JSON.parse(userInfo);\r\n");
      out.write("                } catch (e) {\r\n");
      out.write("                    console.error('Error parsing userInfo from localStorage:', e);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Check sessionStorage\r\n");
      out.write("            userInfo = sessionStorage.getItem('userInfo');\r\n");
      out.write("            if (userInfo) {\r\n");
      out.write("                try {\r\n");
      out.write("                    return JSON.parse(userInfo);\r\n");
      out.write("                } catch (e) {\r\n");
      out.write("                    console.error('Error parsing userInfo from sessionStorage:', e);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Check for OAuth success in URL params (for redirect scenarios)\r\n");
      out.write("            const urlParams = new URLSearchParams(window.location.search);\r\n");
      out.write("            if (urlParams.get('login') === 'success') {\r\n");
      out.write("                // Try to get user info via API call if needed\r\n");
      out.write("                return null; // Will trigger login button display\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            return null;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function displayUserInfo(userInfo) {\r\n");
      out.write("            const userName = userInfo.name || userInfo.email || userInfo.username || 'Người dùng';\r\n");
      out.write("            \r\n");
      out.write("            const navUserInfo = document.getElementById('nav-user-info');\r\n");
      out.write("            const navLoginBtn = document.getElementById('nav-login-btn');\r\n");
      out.write("            \r\n");
      out.write("            if (navUserInfo && navLoginBtn) {\r\n");
      out.write("                navUserInfo.innerHTML = \r\n");
      out.write("                    '<div class=\"dropdown\">' +\r\n");
      out.write("                        '<a href=\"#\" class=\"btn btn-outline-primary dropdown-toggle\" ' +\r\n");
      out.write("                           'id=\"userDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">' +\r\n");
      out.write("                            '<i class=\"fas fa-user-circle me-1\"></i>' +\r\n");
      out.write("                            '<span class=\"d-none d-md-inline\">' + userName + '</span>' +\r\n");
      out.write("                        '</a>' +\r\n");
      out.write("                        '<ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"userDropdown\">' +\r\n");
      out.write("                            '<li><h6 class=\"dropdown-header\">' +\r\n");
      out.write("                                '<i class=\"fas fa-user-circle me-2\"></i>' + userName +\r\n");
      out.write("                            '</h6></li>' +\r\n");
      out.write("                            '<li><hr class=\"dropdown-divider\"></li>' +\r\n");
      out.write("                            '<li><a class=\"dropdown-item\" href=\"' + contextPath + '/profile.jsp\">' +\r\n");
      out.write("                                '<i class=\"fas fa-user me-2\"></i>Hồ sơ cá nhân' +\r\n");
      out.write("                            '</a></li>' +\r\n");
      out.write("                            '<li><a class=\"dropdown-item\" href=\"' + contextPath + '/orders\">' +\r\n");
      out.write("                                '<i class=\"fas fa-box me-2\"></i>Đơn hàng của tôi' +\r\n");
      out.write("                            '</a></li>' +\r\n");
      out.write("                            '<li><a class=\"dropdown-item\" href=\"' + contextPath + '/wishlist\">' +\r\n");
      out.write("                                '<i class=\"fas fa-heart me-2\"></i>Danh sách yêu thích' +\r\n");
      out.write("                            '</a></li>' +\r\n");
      out.write("                            '<li><a class=\"dropdown-item\" href=\"' + contextPath + '/settings\">' +\r\n");
      out.write("                                '<i class=\"fas fa-cog me-2\"></i>Cài đặt' +\r\n");
      out.write("                            '</a></li>' +\r\n");
      out.write("                            '<li><hr class=\"dropdown-divider\"></li>' +\r\n");
      out.write("                            '<li><a class=\"dropdown-item text-danger\" href=\"#\" onclick=\"logoutUser()\">' +\r\n");
      out.write("                                '<i class=\"fas fa-sign-out-alt me-2\"></i>Đăng xuất' +\r\n");
      out.write("                            '</a></li>' +\r\n");
      out.write("                        '</ul>' +\r\n");
      out.write("                    '</div>';\r\n");
      out.write("                \r\n");
      out.write("                navUserInfo.classList.remove('d-none');\r\n");
      out.write("                navLoginBtn.classList.add('d-none');\r\n");
      out.write("                \r\n");
      out.write("                // Initialize Bootstrap dropdown\r\n");
      out.write("                const dropdownTrigger = navUserInfo.querySelector('[data-bs-toggle=\"dropdown\"]');\r\n");
      out.write("                if (dropdownTrigger && window.bootstrap) {\r\n");
      out.write("                    new bootstrap.Dropdown(dropdownTrigger);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function displayLoginButton() {\r\n");
      out.write("            const navUserInfo = document.getElementById('nav-user-info');\r\n");
      out.write("            const navLoginBtn = document.getElementById('nav-login-btn');\r\n");
      out.write("            \r\n");
      out.write("            if (navUserInfo && navLoginBtn) {\r\n");
      out.write("                navUserInfo.classList.add('d-none');\r\n");
      out.write("                navLoginBtn.classList.remove('d-none');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function logoutUser() {\r\n");
      out.write("            if (confirm('Bạn có chắc chắn muốn đăng xuất?')) {\r\n");
      out.write("                // Clear all stored user data\r\n");
      out.write("                localStorage.removeItem('userInfo');\r\n");
      out.write("                sessionStorage.removeItem('userInfo');\r\n");
      out.write("                localStorage.removeItem('authToken');\r\n");
      out.write("                sessionStorage.removeItem('authToken');\r\n");
      out.write("                \r\n");
      out.write("                // Clear any other auth-related storage\r\n");
      out.write("                Object.keys(localStorage).forEach(key => {\r\n");
      out.write("                    if (key.startsWith('auth_') || key.startsWith('user_')) {\r\n");
      out.write("                        localStorage.removeItem(key);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("                // Redirect to home page\r\n");
      out.write("                window.location.href = contextPath + '/';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Initialize authentication when DOM is loaded\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            initializeUserAuth();\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // Re-check auth status when user returns to tab (in case of logout in another tab)\r\n");
      out.write("        document.addEventListener('visibilitychange', function() {\r\n");
      out.write("            if (!document.hidden) {\r\n");
      out.write("                initializeUserAuth();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    ");
 
        // Debugging session state
        Long userId = (Long) session.getAttribute("userId");
        if (userId == null) {
    
      out.write("<script>console.log('User is not logged in.');</script>\r\n");
      out.write("    ");
 
        } else {
    
      out.write("<script>console.log('Logged in as user ID: ");
      out.print( userId );
      out.write("');</script>\r\n");
      out.write("    ");
 
        }
    
      out.write("<script>\r\n");
      out.write("        document.getElementById('reviewForm').addEventListener('submit', async function(event) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("\r\n");
      out.write("            const userId = '");
      out.print( session.getAttribute("userId") );
      out.write("';\r\n");
      out.write("            if (!userId || userId === 'null') {\r\n");
      out.write("                alert('Bạn cần đăng nhập để gửi đánh giá.');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            const productId = '");
      out.print( productId );
      out.write("';\r\n");
      out.write("            const rating = document.getElementById('ratingValue').value;\r\n");
      out.write("            const comment = document.getElementById('reviewComment').value;\r\n");
      out.write("\r\n");
      out.write("            try {\r\n");
      out.write("                const response = await fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/reviews`, {\r\n");
      out.write("                    method: 'POST',\r\n");
      out.write("                    headers: {\r\n");
      out.write("                        'Content-Type': 'application/json'\r\n");
      out.write("                    },\r\n");
      out.write("                    body: JSON.stringify({ userId, productId, rating, comment })\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                if (response.ok) {\r\n");
      out.write("                    alert('Đánh giá của bạn đã được gửi thành công!');\r\n");
      out.write("                    location.reload();\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert('Gửi đánh giá thất bại. Vui lòng thử lại.');\r\n");
      out.write("                }\r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                console.error('Error submitting review:', error);\r\n");
      out.write("                alert('Đã xảy ra lỗi khi gửi đánh giá.');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
