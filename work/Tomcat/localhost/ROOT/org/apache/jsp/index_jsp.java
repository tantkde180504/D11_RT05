/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2025-07-14 10:07:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction(null, null, null, null);
}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>43 Gundam Hobby - M√¥ h√¨nh Gundam ch√≠nh h√£ng</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/styles.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/layout-sizing.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/category-popup.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/navbar-darkmode.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/navbar-bg-orange.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/navbar-menu-white.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/hamburger-menu.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/navbar-fix.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/account-menu-fix.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/user-avatar.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Success notification for OAuth login -->\r\n");
      out.write("    <div id=\"oauth-success-notification\" class=\"alert alert-success alert-dismissible fade oauth-notification\">\r\n");
      out.write("        <strong>üéâ ƒêƒÉng nh·∫≠p th√†nh c√¥ng!</strong>\r\n");
      out.write("        <p class=\"mb-0\" id=\"welcome-message\">Ch√†o m·ª´ng b·∫°n quay tr·ªü l·∫°i!</p>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Header -->\r\n");
      out.write("    <header class=\"bg-white shadow-sm sticky-top\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row align-items-center py-3\">\r\n");
      out.write("                <!-- Logo Section with Hamburger Menu -->\r\n");
      out.write("                <div class=\"col-lg-3 col-md-4 col-6\">\r\n");
      out.write("                    <div class=\"header-logo-section\">\r\n");
      out.write("                        <!-- Hamburger Menu (Mobile) -->\r\n");
      out.write("                        <button class=\"hamburger-menu\" id=\"hamburgerBtn\" aria-label=\"Menu\">\r\n");
      out.write("                            <span class=\"line\"></span>\r\n");
      out.write("                            <span class=\"line\"></span>\r\n");
      out.write("                            <span class=\"line\"></span>\r\n");
      out.write("                        </button>\r\n");
      out.write("                        \r\n");
      out.write("                        <div class=\"logo\">\r\n");
      out.write("                            <a href=\"");
      out.print(request.getContextPath());
      out.write("/\">\r\n");
      out.write("                                <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/logo.png\" alt=\"43 Gundam Logo\" class=\"logo-img\">\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- Search Section -->\r\n");
      out.write("                <div class=\"col-lg-6 col-md-4 col-12 order-lg-2 order-md-2 order-3\">\r\n");
      out.write("                    <div class=\"header-center-section\">\r\n");
      out.write("                        <div class=\"search-container w-100\">\r\n");
      out.write("                            <form class=\"search-form\" action=\"");
      out.print(request.getContextPath());
      out.write("/search.jsp\" method=\"get\" id=\"headerSearchForm\">\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"text\" name=\"q\" class=\"form-control search-input\" \r\n");
      out.write("                                           placeholder=\"T√¨m ki·∫øm s·∫£n ph·∫©m...\" id=\"headerSearchInput\" autocomplete=\"off\">\r\n");
      out.write("                                    <button class=\"btn btn-search\" type=\"submit\">\r\n");
      out.write("                                        <i class=\"fas fa-search\"></i>\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <!-- Autocomplete suggestions -->\r\n");
      out.write("                                <div id=\"headerSearchSuggestions\" class=\"search-suggestions\"></div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- Actions Section -->\r\n");
      out.write("                <div class=\"col-lg-3 col-md-4 col-6 order-lg-3 order-md-3 order-2\">\r\n");
      out.write("                    <div class=\"header-actions-section\">\r\n");
      out.write("                        <div class=\"account-menu me-3\">\r\n");
      out.write("                            <!-- Unified Account Button -->\r\n");
      out.write("                            <div id=\"unified-account-menu\">\r\n");
      out.write("                                <div class=\"dropdown\">\r\n");
      out.write("                                    <!-- This button will dynamically change based on login state -->\r\n");
      out.write("                                    <a href=\"#\" class=\"btn btn-outline-primary dropdown-toggle\" \r\n");
      out.write("                                       id=\"unifiedAccountDropdown\" role=\"button\" data-bs-toggle=\"dropdown\">\r\n");
      out.write("                                        <!-- Content will be updated by JavaScript -->\r\n");
      out.write("                                        <i class=\"fas fa-user me-1\"></i>\r\n");
      out.write("                                        <span class=\"account-text d-none d-md-inline\">T√†i kho·∫£n</span>\r\n");
      out.write("                                    </a>\r\n");
      out.write("                                    <ul class=\"dropdown-menu dropdown-menu-end\" id=\"unifiedAccountDropdownMenu\">\r\n");
      out.write("                                        <!-- Menu items will be updated by JavaScript -->\r\n");
      out.write("                                        <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/login.jsp\">\r\n");
      out.write("                                            <i class=\"fas fa-sign-in-alt me-2\"></i>ƒêƒÉng nh·∫≠p\r\n");
      out.write("                                        </a></li>\r\n");
      out.write("                                        <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/register.jsp\">\r\n");
      out.write("                                            <i class=\"fas fa-user-plus me-2\"></i>ƒêƒÉng k√Ω\r\n");
      out.write("                                        </a></li>\r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"cart-btn\">\r\n");
      out.write("                            <a href=\"cart.jsp\" class=\"btn btn-primary\">\r\n");
      out.write("                                <i class=\"fas fa-shopping-cart me-1\"></i>\r\n");
      out.write("                                <span class=\"cart-count\">0</span>\r\n");
      out.write("                                <span class=\"d-none d-lg-inline ms-1\">Gi·ªè h√†ng</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"order-history-btn\">\r\n");
      out.write("                            <a href=\"order-history.jsp\" class=\"btn btn-outline-secondary\">\r\n");
      out.write("                                <i class=\"fas fa-history me-1\"></i>\r\n");
      out.write("                                <span class=\"d-none d-lg-inline\">L·ªãch s·ª≠ giao d·ªãch</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>    <!-- Mobile Sidebar Navigation -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "includes/mobile-sidebar.jsp", out, false);
      out.write("<!-- Hero Banner - CAROUSEL C·ªê ƒê·ªäNH - KH√îNG ƒê∆Ø·ª¢C THAY ƒê·ªîI B·ªûI JAVASCRIPT -->\r\n");
      out.write("    <!-- DO NOT MODIFY: This carousel is protected and should remain static -->\r\n");
      out.write("    <section class=\"hero-banner py-4\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-lg-9\">\r\n");
      out.write("                    <!-- PROTECTED CAROUSEL: heroCarousel - DO NOT TOUCH -->\r\n");
      out.write("                    <div id=\"heroCarousel\" class=\"carousel slide hero-carousel\" data-bs-ride=\"carousel\" data-protected=\"true\">\r\n");
      out.write("                        <div class=\"carousel-indicators\">\r\n");
      out.write("                            <button type=\"button\" data-bs-target=\"#heroCarousel\" data-bs-slide-to=\"0\" class=\"active\"></button>\r\n");
      out.write("                            <button type=\"button\" data-bs-target=\"#heroCarousel\" data-bs-slide-to=\"1\"></button>\r\n");
      out.write("                            <button type=\"button\" data-bs-target=\"#heroCarousel\" data-bs-slide-to=\"2\"></button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"carousel-inner\">\r\n");
      out.write("                            <div class=\"carousel-item active\">\r\n");
      out.write("                                <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/Banner2.jpg\" class=\"d-block w-100\" alt=\"Banner 1\" \r\n");
      out.write("                                     onerror=\"this.src='https://via.placeholder.com/800x400/ff6600/ffffff?text=GUNPLA+45th+Anniversary'\">\r\n");
      out.write("                                <div class=\"carousel-caption\">\r\n");
      out.write("                                    <h3 class=\"banner-title\">GUNPLA 45th Anniversary</h3>\r\n");
      out.write("                                    <p class=\"banner-subtitle\">Perfect Grade Unleashed Nu Gundam</p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"carousel-item\">\r\n");
      out.write("                                <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/Banner1.jpg\" class=\"d-block w-100\" alt=\"Banner 2\"\r\n");
      out.write("                                     onerror=\"this.src='https://via.placeholder.com/800x400/0066cc/ffffff?text=Gundam+Base+Tour'\">\r\n");
      out.write("                                <div class=\"carousel-caption\">\r\n");
      out.write("                                    <h3 class=\"banner-title\">The Gundam Base World Tour 2025</h3>\r\n");
      out.write("                                    <p class=\"banner-subtitle\">Kh√°m ph√° b·ªô s∆∞u t·∫≠p m·ªõi nh·∫•t t·ª´ Bandai</p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"carousel-item\">\r\n");
      out.write("                                <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/sale.png\" class=\"d-block w-100\" alt=\"Banner 3\"\r\n");
      out.write("                                     onerror=\"this.src='https://via.placeholder.com/800x400/cc0066/ffffff?text=Special+Sale'\">\r\n");
      out.write("                                <div class=\"carousel-caption\">\r\n");
      out.write("                                    <h3 class=\"banner-title\">Special Sale Event</h3>\r\n");
      out.write("                                    <p class=\"banner-subtitle\">Gi·∫£m gi√° l√™n ƒë·∫øn 50% cho c√°c s·∫£n ph·∫©m ch·ªçn l·ªçc</p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#heroCarousel\" data-bs-slide=\"prev\">\r\n");
      out.write("                            <span class=\"carousel-control-prev-icon\"></span>\r\n");
      out.write("                        </button>\r\n");
      out.write("                        <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#heroCarousel\" data-bs-slide=\"next\">\r\n");
      out.write("                            <span class=\"carousel-control-next-icon\"></span>\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- END PROTECTED CAROUSEL -->\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-lg-3\">\r\n");
      out.write("                    <div class=\"side-banners\">\r\n");
      out.write("                        <div class=\"side-banner mb-3\">\r\n");
      out.write("                            <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/sale.png\" class=\"img-fluid rounded\" alt=\"Sale Banner\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"side-banner\">\r\n");
      out.write("                            <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/New.jpg\" class=\"img-fluid rounded\" alt=\"New Arrivals\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- Category Navigation -->\r\n");
      out.write("    <section class=\"category-nav py-4 bg-light\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-12\">\r\n");
      out.write("                    <div class=\"category-slider\">\r\n");
      out.write("                        <div class=\"category-item\">\r\n");
      out.write("                            <a href=\"");
      out.print(request.getContextPath());
      out.write("/grade.jsp?grade=HG\" class=\"category-link\">\r\n");
      out.write("                                <div class=\"category-icon\">\r\n");
      out.write("                                    <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/coll_2.jpg\" alt=\"High Grade\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"category-name\">High Grade</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"category-item\">\r\n");
      out.write("                            <a href=\"");
      out.print(request.getContextPath());
      out.write("/grade.jsp?grade=RG\" class=\"category-link\">\r\n");
      out.write("                                <div class=\"category-icon\">\r\n");
      out.write("                                    <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/coll_4.jpg\" alt=\"Real Grade\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"category-name\">Real Grade</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"category-item\">\r\n");
      out.write("                            <a href=\"");
      out.print(request.getContextPath());
      out.write("/grade.jsp?grade=MG\" class=\"category-link\">\r\n");
      out.write("                                <div class=\"category-icon\">\r\n");
      out.write("                                    <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/coll_3.jpg\" alt=\"Master Grade\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"category-name\">Master Grade</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"category-item\">\r\n");
      out.write("                            <a href=\"");
      out.print(request.getContextPath());
      out.write("/grade.jsp?grade=PG\" class=\"category-link\">\r\n");
      out.write("                                <div class=\"category-icon\">\r\n");
      out.write("                                    <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/coll_5.jpg\" alt=\"Perfect Grade\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"category-name\">Perfect Grade</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"category-item\">\r\n");
      out.write("                            <a href=\"");
      out.print(request.getContextPath());
      out.write("/grade.jsp?grade=METAL_BUILD\" class=\"category-link\">\r\n");
      out.write("                                <div class=\"category-icon\">\r\n");
      out.write("                                    <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/coll_1.jpg\" alt=\"Metal Build\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"category-name\">Metal Build</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"category-item\">\r\n");
      out.write("                            <a href=\"");
      out.print(request.getContextPath());
      out.write("/grade.jsp?grade=SD\" class=\"category-link\">\r\n");
      out.write("                                <div class=\"category-icon\">\r\n");
      out.write("                                    <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/coll_11.jpg\" alt=\"Super Deformed\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <span class=\"category-name\">Super Deformed</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>    <!-- Product Sections -->\r\n");
      out.write("    <!-- New Arrivals -->\r\n");
      out.write("    <section class=\"product-section py-5\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"section-header mb-4\">\r\n");
      out.write("                <h2 class=\"section-title\">\r\n");
      out.write("                    <span class=\"title-icon\">üÜï</span>\r\n");
      out.write("                    H√†ng M·ªõi V·ªÅ\r\n");
      out.write("                </h2>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/all-products.jsp\" class=\"view-all-btn\">Xem t·∫•t c·∫£ <i class=\"fas fa-arrow-right ms-1\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <!-- Loading state -->\r\n");
      out.write("            <div id=\"newArrivalsLoading\" class=\"text-center py-4\">\r\n");
      out.write("                <div class=\"spinner-border text-primary\" role=\"status\">\r\n");
      out.write("                    <span class=\"visually-hidden\">ƒêang t·∫£i...</span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p class=\"mt-2 text-muted\">ƒêang t·∫£i s·∫£n ph·∫©m m·ªõi...</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <!-- Error state -->\r\n");
      out.write("            <div id=\"newArrivalsError\" class=\"alert alert-warning text-center\" style=\"display: none;\">\r\n");
      out.write("                <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n");
      out.write("                Kh√¥ng th·ªÉ t·∫£i danh s√°ch s·∫£n ph·∫©m m·ªõi. Vui l√≤ng th·ª≠ l·∫°i sau.\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <!-- Products container -->\r\n");
      out.write("            <div class=\"row\" id=\"newArrivalsContainer\">\r\n");
      out.write("                <!-- Products will be loaded here dynamically -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- Pre-Order Section -->\r\n");
      out.write("    <section class=\"product-section py-5 bg-light\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"section-header mb-4\">\r\n");
      out.write("                <h2 class=\"section-title\">\r\n");
      out.write("                    <span class=\"title-icon\">üì¶</span>\r\n");
      out.write("                    H√†ng Pre-Order\r\n");
      out.write("                </h2>\r\n");
      out.write("                <a href=\"#\" class=\"view-all-btn\">Xem t·∫•t c·∫£ <i class=\"fas fa-arrow-right ms-1\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 mb-4\">\r\n");
      out.write("                    <div class=\"product-card\">\r\n");
      out.write("                        <div class=\"product-image\">\r\n");
      out.write("                            <img src=\"https://via.placeholder.com/250x250/cccccc/666666?text=MG+RX-78\" class=\"img-fluid\" alt=\"MG RX-78-2 Fat Cat\">\r\n");
      out.write("                            <div class=\"product-badges\">\r\n");
      out.write("                                <span class=\"badge bg-info\">Pre-Order</span>\r\n");
      out.write("                                <span class=\"badge bg-danger\">-86%</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"product-overlay\">\r\n");
      out.write("                                <button class=\"btn btn-outline-light btn-sm\">\r\n");
      out.write("                                    <i class=\"fas fa-eye\"></i> Xem nhanh\r\n");
      out.write("                                </button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"product-info\">\r\n");
      out.write("                            <h6 class=\"product-title\">MG RX-78-2 2.0 Fat Cat</h6>\r\n");
      out.write("                            <p class=\"product-category\">Master Grade</p>\r\n");
      out.write("                            <div class=\"product-price\">\r\n");
      out.write("                                <span class=\"current-price\">100.000‚Ç´</span>\r\n");
      out.write("                                <span class=\"old-price\">680.000‚Ç´</span>\r\n");
      out.write("                                <span class=\"discount-percent\">-86%</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <button class=\"btn btn-warning add-to-cart w-100\">\r\n");
      out.write("                                <i class=\"fas fa-clock me-1\"></i>ƒê·∫∑t tr∆∞·ªõc\r\n");
      out.write("                            </button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- Add more pre-order products as needed -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- Tools & Accessories Section -->\r\n");
      out.write("    <section class=\"product-section py-5\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"section-header mb-4\">\r\n");
      out.write("                <h2 class=\"section-title\">\r\n");
      out.write("                    <span class=\"title-icon\">üõ†Ô∏è</span>\r\n");
      out.write("                    Ph·ª• Ki·ªán & M√¥ H√¨nh\r\n");
      out.write("                </h2>\r\n");
      out.write("                <a href=\"#\" class=\"view-all-btn\">Xem t·∫•t c·∫£ <i class=\"fas fa-arrow-right ms-1\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 mb-4\">\r\n");
      out.write("                    <div class=\"product-card\">\r\n");
      out.write("                        <div class=\"product-image\">\r\n");
      out.write("                            <img src=\"https://via.placeholder.com/250x250/cccccc/666666?text=Paint+Set\" class=\"img-fluid\" alt=\"Paint Set\">\r\n");
      out.write("                            <div class=\"product-overlay\">\r\n");
      out.write("                                <button class=\"btn btn-outline-light btn-sm\">\r\n");
      out.write("                                    <i class=\"fas fa-eye\"></i> Xem nhanh\r\n");
      out.write("                                </button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"product-info\">\r\n");
      out.write("                            <h6 class=\"product-title\">Mr. Color Paint Set</h6>\r\n");
      out.write("                            <p class=\"product-category\">D·ª•ng c·ª• s∆°n</p>\r\n");
      out.write("                            <div class=\"product-price\">\r\n");
      out.write("                                <span class=\"current-price\">210.000‚Ç´</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <button class=\"btn btn-primary add-to-cart w-100\">\r\n");
      out.write("                                <i class=\"fas fa-cart-plus me-1\"></i>Th√™m v√†o gi·ªè\r\n");
      out.write("                            </button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- Add more tools and accessories as needed -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>    <!-- Footer -->\r\n");
      out.write("    <footer class=\"bg-dark text-white\">\r\n");
      out.write("        <div class=\"footer-top py-5\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-lg-4 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h5 class=\"footer-title\">43 Gundam Hobby</h5>\r\n");
      out.write("                            <p class=\"footer-desc\">Chuy√™n cung c·∫•p m√¥ h√¨nh Gundam ch√≠nh h√£ng v·ªõi gi√° t·ªët nh·∫•t. Uy t√≠n - Ch·∫•t l∆∞·ª£ng - D·ªãch v·ª• t·∫≠n t√¢m.</p>\r\n");
      out.write("                            <div class=\"store-info\">\r\n");
      out.write("                                <div class=\"info-item mb-2\">\r\n");
      out.write("                                    <i class=\"fas fa-map-marker-alt me-2\"></i>\r\n");
      out.write("                                    <span>59 L√™ ƒê√¨nh Di√™n, C·∫©m L·ªá, ƒê√† N·∫µng</span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"info-item mb-2\">\r\n");
      out.write("                                    <i class=\"fas fa-phone me-2\"></i>\r\n");
      out.write("                                    <a href=\"tel:0385546145\" class=\"text-white\">0385546145 (8h-20h)</a>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"info-item\">\r\n");
      out.write("                                    <i class=\"fas fa-envelope me-2\"></i>\r\n");
      out.write("                                    <a href=\"mailto:43gundamhobby@gmail.com\" class=\"text-white\">43gundamhobby@gmail.com</a>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h6 class=\"footer-title\">S·∫£n ph·∫©m</h6>\r\n");
      out.write("                            <ul class=\"footer-links\">\r\n");
      out.write("                                <li><a href=\"#\">Gundam Bandai</a></li>\r\n");
      out.write("                                <li><a href=\"#\">High Grade (HG)</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Master Grade (MG)</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Real Grade (RG)</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Perfect Grade (PG)</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Metal Build</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h6 class=\"footer-title\">D·ªãch v·ª•</h6>\r\n");
      out.write("                            <ul class=\"footer-links\">\r\n");
      out.write("                                <li><a href=\"#\">H√†ng Pre-Order</a></li>\r\n");
      out.write("                                <li><a href=\"#\">D·ª•ng c·ª• & Ph·ª• ki·ªán</a></li>\r\n");
      out.write("                                <li><a href=\"#\">H∆∞·ªõng d·∫´n l·∫Øp r√°p</a></li>\r\n");
      out.write("                                <li><a href=\"#\">S∆°n & Trang tr√≠</a></li>\r\n");
      out.write("                                <li><a href=\"#\">B·∫£o h√†nh s·∫£n ph·∫©m</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h6 class=\"footer-title\">Ch√≠nh s√°ch</h6>\r\n");
      out.write("                            <ul class=\"footer-links\">\r\n");
      out.write("                                <li><a href=\"#\">Ch√≠nh s√°ch b·∫£o m·∫≠t</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Ch√≠nh s√°ch thanh to√°n</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Ch√≠nh s√°ch v·∫≠n chuy·ªÉn</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Ch√≠nh s√°ch ƒë·ªïi tr·∫£</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Quy ƒë·ªãnh s·ª≠ d·ª•ng</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                        <div class=\"footer-section\">\r\n");
      out.write("                            <h6 class=\"footer-title\">H·ªó tr·ª£</h6>\r\n");
      out.write("                            <ul class=\"footer-links\">\r\n");
      out.write("                                <li><a href=\"#\">Li√™n h·ªá</a></li>\r\n");
      out.write("                                <li><a href=\"#\">FAQ</a></li>\r\n");
      out.write("                                <li><a href=\"#\">H∆∞·ªõng d·∫´n ƒë·∫∑t h√†ng</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Tra c·ª©u ƒë∆°n h√†ng</a></li>\r\n");
      out.write("                                <li><a href=\"#\">H·ªó tr·ª£ k·ªπ thu·∫≠t</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer-social py-4 bg-darker\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row align-items-center\">\r\n");
      out.write("                    <div class=\"col-md-6\">\r\n");
      out.write("                        <h6 class=\"social-title mb-3\">Theo d√µi ch√∫ng t√¥i</h6>\r\n");
      out.write("                        <div class=\"social-links\">\r\n");
      out.write("                            <a href=\"https://www.facebook.com/BANDAIHobbysite.EN\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"social-link facebook\">\r\n");
      out.write("                                <i class=\"fab fa-facebook-f\"></i>\r\n");
      out.write("                                <span>Facebook</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                            <a href=\"https://www.youtube.com/@GundamInfo\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"social-link youtube\">\r\n");
      out.write("                                <i class=\"fab fa-youtube\"></i>\r\n");
      out.write("                                <span>Youtube</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                            <a href=\"https://www.tiktok.com/@bandainamcoasiahobby_?is_from_webapp=1&sender_device=pc\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"social-link tiktok\">\r\n");
      out.write("                                <i class=\"fab fa-tiktok\"></i>\r\n");
      out.write("                                <span>TikTok</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                            <a href=\"https://www.instagram.com/bandaihobbyhk/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"social-link instagram\">\r\n");
      out.write("                                <i class=\"fab fa-instagram\"></i>\r\n");
      out.write("                                <span>Instagram</span>\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-md-6\">\r\n");
      out.write("                        <div class=\"newsletter\">\r\n");
      out.write("                            <h6 class=\"newsletter-title mb-3\">ƒêƒÉng k√Ω nh·∫≠n tin</h6>\r\n");
      out.write("                            <form class=\"newsletter-form\">\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"email\" class=\"form-control\" placeholder=\"Nh·∫≠p email c·ªßa b·∫°n...\">\r\n");
      out.write("                                    <button class=\"btn btn-primary\" type=\"submit\">\r\n");
      out.write("                                        <i class=\"fas fa-paper-plane\"></i>\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer-bottom py-3 bg-darker border-top border-secondary\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row align-items-center\">\r\n");
      out.write("                    <div class=\"col-md-6\">\r\n");
      out.write("                        <p class=\"copyright mb-0\">&copy; 2025 43 Gundam Hobby. All rights reserved.</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-md-6 text-md-end\">\r\n");
      out.write("                        <div class=\"payment-methods\">\r\n");
      out.write("                            <img src=\"https://via.placeholder.com/40x25/cccccc/666666?text=VISA\" alt=\"Visa\" class=\"payment-icon\">\r\n");
      out.write("                            <img src=\"https://via.placeholder.com/40x25/cccccc/666666?text=MC\" alt=\"Mastercard\" class=\"payment-icon\">\r\n");
      out.write("                            <img src=\"https://via.placeholder.com/40x25/cccccc/666666?text=COD\" alt=\"COD\" class=\"payment-icon\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <!-- Back to Top Button -->\r\n");
      out.write("    <button class=\"back-to-top\" id=\"backToTop\">\r\n");
      out.write("        <i class=\"fas fa-chevron-up\"></i>\r\n");
      out.write("    </button>\r\n");
      out.write("\r\n");
      out.write("    <!-- Scripts -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Legacy Cleanup - MUST RUN FIRST to remove old elements -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/legacy-navbar-cleanup.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- MD5 Library for Gravatar -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/md5.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Email to Google Converter -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/email-to-google-converter.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Anti-Flicker Unified - LOAD FIRST to prevent navbar flickering -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/anti-flicker-unified.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Unified Navbar Manager - Core navbar logic -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/unified-navbar-manager.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Google OAuth Handler - Updated for unified navbar -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/google-oauth-handler.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Hamburger Menu Script -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/hamburger-menu.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Carousel Protection Script - Load FIRST to protect carousel -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/carousel-protection.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Product Manager - Load AFTER carousel protection -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/product-manager.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Search Autocomplete Script -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/search-autocomplete.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Unified Navbar Debug Tool -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/unified-navbar-debug.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Context Path Setup -->\r\n");
      out.write("    <script>\r\n");
      out.write("        window.contextPath = '");
      out.print(request.getContextPath());
      out.write("';\r\n");
      out.write("        console.log('Context path set to:', window.contextPath);\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Basic page functionality -->\r\n");
      out.write("    <script>\r\n");
      out.write("        // Back to top functionality\r\n");
      out.write("        const backToTopBtn = document.getElementById('backToTop');\r\n");
      out.write("        \r\n");
      out.write("        window.addEventListener('scroll', () => {\r\n");
      out.write("            if (window.pageYOffset > 300) {\r\n");
      out.write("                backToTopBtn.classList.add('show');\r\n");
      out.write("            } else {\r\n");
      out.write("                backToTopBtn.classList.remove('show');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        backToTopBtn.addEventListener('click', () => {\r\n");
      out.write("            window.scrollTo({\r\n");
      out.write("                top: 0,\r\n");
      out.write("                behavior: 'smooth'\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Initialize static add-to-cart buttons (for pre-order and tools sections)\r\n");
      out.write("        function initializeStaticCartButtons() {\r\n");
      out.write("            document.querySelectorAll('.add-to-cart:not([data-dynamic])').forEach(button => {\r\n");
      out.write("                button.addEventListener('click', function() {\r\n");
      out.write("                    const productId = this.getAttribute('data-product-id');\r\n");
      out.write("                    if (!productId) {\r\n");
      out.write("                        showNotification('‚ö†Ô∏è Ch·ª©c nƒÉng n√†y s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau!', 'info');\r\n");
      out.write("                        return;\r\n");
      out.write("                    }\r\n");
      out.write("                    \r\n");
      out.write("                    // Check if button is disabled (out of stock)\r\n");
      out.write("                    if (this.disabled) {\r\n");
      out.write("                        return;\r\n");
      out.write("                    }\r\n");
      out.write("                    \r\n");
      out.write("                    // Show loading state\r\n");
      out.write("                    const originalHTML = this.innerHTML;\r\n");
      out.write("                    this.innerHTML = '<i class=\"fas fa-spinner fa-spin me-1\"></i>ƒêang th√™m...';\r\n");
      out.write("                    this.disabled = true;\r\n");
      out.write("                    \r\n");
      out.write("                    fetch('");
      out.print(request.getContextPath());
      out.write("/api/cart/add', {\r\n");
      out.write("                        method: 'POST',\r\n");
      out.write("                        headers: { 'Content-Type': 'application/json' },\r\n");
      out.write("                        credentials: 'same-origin',\r\n");
      out.write("                        body: JSON.stringify({ productId: Number(productId), quantity: 1 })\r\n");
      out.write("                    }) \r\n");
      out.write("                    .then(res => res.json())\r\n");
      out.write("                    .then(data => {\r\n");
      out.write("                        if (data.success) {\r\n");
      out.write("                            this.innerHTML = '<i class=\"fas fa-check me-1\"></i>ƒê√£ th√™m';\r\n");
      out.write("                            this.classList.add('btn-success');\r\n");
      out.write("                            this.classList.remove('btn-primary', 'btn-warning');\r\n");
      out.write("                            showNotification('‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!', 'success');\r\n");
      out.write("                        } else {\r\n");
      out.write("                            this.innerHTML = originalHTML;\r\n");
      out.write("                            this.disabled = false;\r\n");
      out.write("                            showNotification('‚ùå ' + (data.message || 'C√≥ l·ªói x·∫£y ra!'), 'error');\r\n");
      out.write("                        }\r\n");
      out.write("                        \r\n");
      out.write("                        // Reset button after 2 seconds\r\n");
      out.write("                        setTimeout(() => {\r\n");
      out.write("                            if (this.classList.contains('btn-success')) {\r\n");
      out.write("                                this.innerHTML = originalHTML;\r\n");
      out.write("                                this.classList.remove('btn-success');\r\n");
      out.write("                                this.classList.add('btn-primary');\r\n");
      out.write("                                this.disabled = false;\r\n");
      out.write("                            }\r\n");
      out.write("                        }, 2000);\r\n");
      out.write("                    })\r\n");
      out.write("                    .catch(() => {\r\n");
      out.write("                        this.innerHTML = originalHTML;\r\n");
      out.write("                        this.disabled = false;\r\n");
      out.write("                        showNotification('‚ùå Kh√¥ng th·ªÉ th√™m v√†o gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i!', 'error');\r\n");
      out.write("                    });\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Load New Arrivals from Database\r\n");
      out.write("        function loadNewArrivals() {\r\n");
      out.write("            const container = document.getElementById('newArrivalsContainer');\r\n");
      out.write("            const loading = document.getElementById('newArrivalsLoading');\r\n");
      out.write("            const error = document.getElementById('newArrivalsError');\r\n");
      out.write("            \r\n");
      out.write("            // Show loading\r\n");
      out.write("            loading.style.display = 'block';\r\n");
      out.write("            error.style.display = 'none';\r\n");
      out.write("            container.innerHTML = '';\r\n");
      out.write("            \r\n");
      out.write("            console.log('üîÑ Loading new arrivals from database...');\r\n");
      out.write("            \r\n");
      out.write("            // Fetch latest products from API with explicit ordering\r\n");
      out.write("            fetch('");
      out.print(request.getContextPath());
      out.write("/api/products/latest?limit=6')\r\n");
      out.write("                .then(response => {\r\n");
      out.write("                    console.log('üì° API Response status:', response.status);\r\n");
      out.write("                    if (!response.ok) {\r\n");
      out.write("                        throw new Error(`HTTP ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.statusText}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\r\n");
      out.write("                    }\r\n");
      out.write("                    return response.json();\r\n");
      out.write("                })\r\n");
      out.write("                .then(data => {\r\n");
      out.write("                    console.log('üìä API Response data:', data);\r\n");
      out.write("                    loading.style.display = 'none';\r\n");
      out.write("                    \r\n");
      out.write("                    if (data.success && data.data && data.data.length > 0) {\r\n");
      out.write("                        console.log('‚úÖ Successfully loaded', data.data.length, 'products');\r\n");
      out.write("                        \r\n");
      out.write("                        // Enhanced debugging for each product\r\n");
      out.write("                        console.log('üîç Detailed Product Analysis:');\r\n");
      out.write("                        data.data.forEach((product, index) => {\r\n");
      out.write("                            console.log(`Product ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index + 1}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write('[');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.name}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("]:`, {\r\n");
      out.write("                                id: product.id,\r\n");
      out.write("                                isActive: product.isActive,\r\n");
      out.write("                                isActiveType: typeof product.isActive,\r\n");
      out.write("                                stockQuantity: product.stockQuantity,\r\n");
      out.write("                                stockType: typeof product.stockQuantity,\r\n");
      out.write("                                createdAt: product.createdAt,\r\n");
      out.write("                                price: product.price,\r\n");
      out.write("                                category: product.category,\r\n");
      out.write("                                grade: product.grade\r\n");
      out.write("                            });\r\n");
      out.write("                        });\r\n");
      out.write("                        \r\n");
      out.write("                        renderNewArrivals(data.data);\r\n");
      out.write("                    } else {\r\n");
      out.write("                        console.warn('‚ö†Ô∏è No products found or API returned empty data');\r\n");
      out.write("                        showNewArrivalsError('Kh√¥ng c√≥ s·∫£n ph·∫©m m·ªõi n√†o.');\r\n");
      out.write("                    }\r\n");
      out.write("                })\r\n");
      out.write("                .catch(err => {\r\n");
      out.write("                    console.error('‚ùå Error loading new arrivals:', err);\r\n");
      out.write("                    loading.style.display = 'none';\r\n");
      out.write("                    showNewArrivalsError('Kh√¥ng th·ªÉ t·∫£i danh s√°ch s·∫£n ph·∫©m m·ªõi. Vui l√≤ng th·ª≠ l·∫°i sau.');\r\n");
      out.write("                });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function renderNewArrivals(products) {\r\n");
      out.write("            const container = document.getElementById('newArrivalsContainer');\r\n");
      out.write("            container.innerHTML = '';\r\n");
      out.write("            \r\n");
      out.write("            console.log('üé® Rendering New Arrivals - Products sorted by newest first:');\r\n");
      out.write("            \r\n");
      out.write("            // Sort products by creation date (newest first) to ensure proper order\r\n");
      out.write("            const sortedProducts = products.sort((a, b) => {\r\n");
      out.write("                const dateA = getProductDate(a.createdAt);\r\n");
      out.write("                const dateB = getProductDate(b.createdAt);\r\n");
      out.write("                return dateB - dateA; // Newest first\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            sortedProducts.forEach((product, index) => {\r\n");
      out.write("                console.log(`  ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index + 1}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('.');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.name}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" - Created: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${formatProductDate(product.createdAt)}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("`);\r\n");
      out.write("                const productCard = createProductCard(product);\r\n");
      out.write("                container.appendChild(productCard);\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            console.log(`‚úÖ Rendered ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sortedProducts.length}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" products in newest-first order`);\r\n");
      out.write("            \r\n");
      out.write("            // Re-attach event listeners for new add-to-cart buttons\r\n");
      out.write("            attachAddToCartListeners();\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function createProductCard(product) {\r\n");
      out.write("            const col = document.createElement('div');\r\n");
      out.write("            col.className = 'col-xl-2 col-lg-3 col-md-4 col-sm-6 mb-4';\r\n");
      out.write("            \r\n");
      out.write("            // Handle price formatting\r\n");
      out.write("            let formattedPrice = '0‚Ç´';\r\n");
      out.write("            if (product.price) {\r\n");
      out.write("                const price = parseFloat(product.price);\r\n");
      out.write("                if (!isNaN(price)) {\r\n");
      out.write("                    formattedPrice = new Intl.NumberFormat('vi-VN', {\r\n");
      out.write("                        style: 'currency',\r\n");
      out.write("                        currency: 'VND'\r\n");
      out.write("                    }).format(price);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Handle image with multiple fallbacks\r\n");
      out.write("            const contextPath = '");
      out.print(request.getContextPath());
      out.write("';\r\n");
      out.write("            const defaultImage = contextPath + '/img/RGStrikeGundam.jpg';\r\n");
      out.write("            const placeholderImage = 'https://via.placeholder.com/250x250/cccccc/666666?text=Gundam+Model';\r\n");
      out.write("            const productImage = product.imageUrl || defaultImage;\r\n");
      out.write("            \r\n");
      out.write("            // Handle category display\r\n");
      out.write("            const categoryDisplay = getCategoryDisplayName(product.category) || 'Gundam Model';\r\n");
      out.write("            \r\n");
      out.write("            // Handle grade display\r\n");
      out.write("            const gradeDisplay = getGradeDisplayName(product.grade);\r\n");
      out.write("            const finalCategoryDisplay = gradeDisplay || categoryDisplay;\r\n");
      out.write("            \r\n");
      out.write("            // Calculate if product is new (added within last 30 days)\r\n");
      out.write("            const isNew = isProductNew(product.createdAt);\r\n");
      out.write("            const createdDate = formatProductDate(product.createdAt);\r\n");
      out.write("            const newBadge = isNew ? '<span class=\"badge bg-success\">M·ªõi</span>' : '';\r\n");
      out.write("            \r\n");
      out.write("            console.log(`üìÖ Product Date Info [");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.name}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("]: Created ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${createdDate}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", IsNew: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isNew}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\r\n");
      out.write("            \r\n");
      out.write("            // Handle stock status - ki·ªÉm tra c·∫£ is_active v√† stock_quantity\r\n");
      out.write("            const isActive = product.isActive === true; // Strict check for true\r\n");
      out.write("            const stockQuantity = product.stockQuantity ? parseInt(product.stockQuantity) : 0;\r\n");
      out.write("            const isInStock = isActive && stockQuantity > 0;\r\n");
      out.write("            \r\n");
      out.write("            // Enhanced debugging stock status\r\n");
      out.write("            console.log(`üì¶ Product Stock Debug [");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.name}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("]:`, {\r\n");
      out.write("                isActive: product.isActive,\r\n");
      out.write("                isActiveType: typeof product.isActive,\r\n");
      out.write("                stockQuantity: product.stockQuantity,\r\n");
      out.write("                stockQuantityType: typeof product.stockQuantity,\r\n");
      out.write("                parsedStockQuantity: stockQuantity,\r\n");
      out.write("                finalIsInStock: isInStock,\r\n");
      out.write("                createdAt: product.createdAt\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            const stockBadge = !isInStock ? '<span class=\"badge bg-danger\">H·∫øt h√†ng</span>' : '';\r\n");
      out.write("            \r\n");
      out.write("            col.innerHTML = `\r\n");
      out.write("                <div class=\"product-card\">\r\n");
      out.write("                    <div class=\"product-image\">\r\n");
      out.write("                        <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${productImage}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"img-fluid\" alt=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.name || 'Gundam Model'}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" \r\n");
      out.write("                             onerror=\"this.src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${placeholderImage}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\">\r\n");
      out.write("                        <div class=\"product-badges\">\r\n");
      out.write("                            ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${newBadge}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stockBadge}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("                        <div class=\"product-overlay\">\r\n");
      out.write("                            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product-detail.jsp?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"btn btn-outline-light btn-sm\">\r\n");
      out.write("                                <i class=\"fas fa-eye\"></i> Xem nhanh\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"product-info\">\r\n");
      out.write("                        <h6 class=\"product-title\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.name || 'T√™n s·∫£n ph·∫©m'}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h6>\r\n");
      out.write("                        <p class=\"product-category\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${finalCategoryDisplay}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("                        <div class=\"product-price\">\r\n");
      out.write("                            <span class=\"current-price\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${formattedPrice}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button class=\"btn ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isInStock ? 'btn-primary' : 'btn-secondary'}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" add-to-cart w-100\" \r\n");
      out.write("                                data-product-id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" \r\n");
      out.write("                                data-dynamic=\"true\"\r\n");
      out.write("                                ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!isInStock ? 'disabled' : ''}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">\r\n");
      out.write("                            <i class=\"fas fa-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isInStock ? 'cart-plus' : 'times'}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" me-1\"></i>\r\n");
      out.write("                            ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isInStock ? 'Th√™m v√†o gi·ªè' : 'H·∫øt h√†ng'}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            `;\r\n");
      out.write("            \r\n");
      out.write("            return col;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function getCategoryDisplayName(category) {\r\n");
      out.write("            const categoryNames = {\r\n");
      out.write("                'GUNDAM_BANDAI': 'Gundam Bandai',\r\n");
      out.write("                'PRE_ORDER': 'Pre-Order',\r\n");
      out.write("                'TOOLS_ACCESSORIES': 'D·ª•ng c·ª• & Ph·ª• ki·ªán'\r\n");
      out.write("            };\r\n");
      out.write("            return categoryNames[category] || category;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function getGradeDisplayName(grade) {\r\n");
      out.write("            const gradeNames = {\r\n");
      out.write("                'HG': 'High Grade (HG)',\r\n");
      out.write("                'RG': 'Real Grade (RG)', \r\n");
      out.write("                'MG': 'Master Grade (MG)',\r\n");
      out.write("                'PG': 'Perfect Grade (PG)',\r\n");
      out.write("                'SD': 'Super Deformed (SD)',\r\n");
      out.write("                'METAL_BUILD': 'Metal Build',\r\n");
      out.write("                'FULL_MECHANICS': 'Full Mechanics',\r\n");
      out.write("                'TOOLS': 'D·ª•ng c·ª•',\r\n");
      out.write("                'PAINT': 'S∆°n & V·∫≠t li·ªáu',\r\n");
      out.write("                'BASE_STAND': 'ƒê·∫ø & Gi√° ƒë·ª°',\r\n");
      out.write("                'DECAL': 'Decal & Nh√£n d√°n'\r\n");
      out.write("            };\r\n");
      out.write("            return gradeNames[grade] || null;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function getProductDate(createdDate) {\r\n");
      out.write("            if (!createdDate) return new Date(0); // Very old date for fallback\r\n");
      out.write("            \r\n");
      out.write("            try {\r\n");
      out.write("                if (Array.isArray(createdDate)) {\r\n");
      out.write("                    // Java LocalDateTime serialized as array [year, month, day, hour, minute, second, nano]\r\n");
      out.write("                    return new Date(createdDate[0], createdDate[1] - 1, createdDate[2], \r\n");
      out.write("                                  createdDate[3] || 0, createdDate[4] || 0, createdDate[5] || 0);\r\n");
      out.write("                } else {\r\n");
      out.write("                    return new Date(createdDate);\r\n");
      out.write("                }\r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                console.warn('Error parsing product date:', error);\r\n");
      out.write("                return new Date(0);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function formatProductDate(createdDate) {\r\n");
      out.write("            const date = getProductDate(createdDate);\r\n");
      out.write("            return date.toLocaleString('vi-VN');\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function isProductNew(createdDate) {\r\n");
      out.write("            if (!createdDate) return false;\r\n");
      out.write("            \r\n");
      out.write("            try {\r\n");
      out.write("                const productDate = getProductDate(createdDate);\r\n");
      out.write("                const now = new Date();\r\n");
      out.write("                const thirtyDaysAgo = new Date(now.getTime() - (30 * 24 * 60 * 60 * 1000));\r\n");
      out.write("                \r\n");
      out.write("                return productDate >= thirtyDaysAgo;\r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                console.warn('Error checking if product is new:', error);\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function showNewArrivalsError(message) {\r\n");
      out.write("            const error = document.getElementById('newArrivalsError');\r\n");
      out.write("            const messageElement = error.querySelector('i').nextSibling;\r\n");
      out.write("            if (messageElement) {\r\n");
      out.write("                messageElement.textContent = ' ' + message;\r\n");
      out.write("            }\r\n");
      out.write("            error.style.display = 'block';\r\n");
      out.write("            \r\n");
      out.write("            // Add retry button\r\n");
      out.write("            if (!error.querySelector('.retry-btn')) {\r\n");
      out.write("                const retryBtn = document.createElement('button');\r\n");
      out.write("                retryBtn.className = 'btn btn-outline-warning btn-sm ms-2 retry-btn';\r\n");
      out.write("                retryBtn.innerHTML = '<i class=\"fas fa-redo me-1\"></i>Th·ª≠ l·∫°i';\r\n");
      out.write("                retryBtn.onclick = function() {\r\n");
      out.write("                    error.style.display = 'none';\r\n");
      out.write("                    loadNewArrivals();\r\n");
      out.write("                };\r\n");
      out.write("                error.appendChild(retryBtn);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function attachAddToCartListeners() {\r\n");
      out.write("            // Only attach to dynamically created buttons\r\n");
      out.write("            document.querySelectorAll('.add-to-cart[data-dynamic=\"true\"]').forEach(button => {\r\n");
      out.write("                // Remove existing listeners to avoid duplicates\r\n");
      out.write("                button.replaceWith(button.cloneNode(true));\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            // Re-attach listeners to dynamic buttons only\r\n");
      out.write("            document.querySelectorAll('.add-to-cart[data-dynamic=\"true\"]').forEach(button => {\r\n");
      out.write("                button.addEventListener('click', function() {\r\n");
      out.write("                    // Check if button is disabled (out of stock)\r\n");
      out.write("                    if (this.disabled) {\r\n");
      out.write("                        showNotification('‚ö†Ô∏è S·∫£n ph·∫©m n√†y hi·ªán ƒëang h·∫øt h√†ng', 'warning');\r\n");
      out.write("                        return;\r\n");
      out.write("                    }\r\n");
      out.write("                    \r\n");
      out.write("                    const productId = this.getAttribute('data-product-id');\r\n");
      out.write("                    \r\n");
      out.write("                    // Show loading state\r\n");
      out.write("                    const originalHTML = this.innerHTML;\r\n");
      out.write("                    this.innerHTML = '<i class=\"fas fa-spinner fa-spin me-1\"></i>ƒêang th√™m...';\r\n");
      out.write("                    this.disabled = true;\r\n");
      out.write("                    \r\n");
      out.write("                    fetch('");
      out.print(request.getContextPath());
      out.write("/api/cart/add', {\r\n");
      out.write("                        method: 'POST',\r\n");
      out.write("                        headers: { 'Content-Type': 'application/json' },\r\n");
      out.write("                        credentials: 'same-origin',\r\n");
      out.write("                        body: JSON.stringify({ productId: Number(productId), quantity: 1 })\r\n");
      out.write("                    }) \r\n");
      out.write("                    .then(res => res.json())\r\n");
      out.write("                    .then(data => {\r\n");
      out.write("                        if (data.success) {\r\n");
      out.write("                            this.innerHTML = '<i class=\"fas fa-check me-1\"></i>ƒê√£ th√™m';\r\n");
      out.write("                            this.classList.add('btn-success');\r\n");
      out.write("                            this.classList.remove('btn-primary');\r\n");
      out.write("                            \r\n");
      out.write("                            // Show success notification\r\n");
      out.write("                            showNotification('‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!', 'success');\r\n");
      out.write("                        } else {\r\n");
      out.write("                            this.innerHTML = originalHTML;\r\n");
      out.write("                            this.disabled = false;\r\n");
      out.write("                            showNotification('‚ùå ' + (data.message || 'C√≥ l·ªói x·∫£y ra!'), 'error');\r\n");
      out.write("                        }\r\n");
      out.write("                        \r\n");
      out.write("                        // Reset button after 2 seconds\r\n");
      out.write("                        setTimeout(() => {\r\n");
      out.write("                            if (this.classList.contains('btn-success')) {\r\n");
      out.write("                                this.innerHTML = originalHTML;\r\n");
      out.write("                                this.classList.remove('btn-success');\r\n");
      out.write("                                this.classList.add('btn-primary');\r\n");
      out.write("                                this.disabled = false;\r\n");
      out.write("                            }\r\n");
      out.write("                        }, 2000);\r\n");
      out.write("                    })\r\n");
      out.write("                    .catch(() => {\r\n");
      out.write("                        this.innerHTML = originalHTML;\r\n");
      out.write("                        this.disabled = false;\r\n");
      out.write("                        showNotification('‚ùå Kh√¥ng th·ªÉ th√™m v√†o gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i!', 'error');\r\n");
      out.write("                    });\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Simple notification function\r\n");
      out.write("        function showNotification(message, type = 'info') {\r\n");
      out.write("            // Create or get notification container\r\n");
      out.write("            let container = document.getElementById('notification-container');\r\n");
      out.write("            if (!container) {\r\n");
      out.write("                container = document.createElement('div');\r\n");
      out.write("                container.id = 'notification-container';\r\n");
      out.write("                container.style.cssText = `\r\n");
      out.write("                    position: fixed;\r\n");
      out.write("                    top: 20px;\r\n");
      out.write("                    right: 20px;\r\n");
      out.write("                    z-index: 9999;\r\n");
      out.write("                    max-width: 350px;\r\n");
      out.write("                `;\r\n");
      out.write("                document.body.appendChild(container);\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Create notification\r\n");
      out.write("            const notification = document.createElement('div');\r\n");
      out.write("            const bgClass = type === 'success' ? 'bg-success' : type === 'error' ? 'bg-danger' : 'bg-info';\r\n");
      out.write("            notification.className = `alert ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bgClass}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" text-white alert-dismissible fade show mb-2`;\r\n");
      out.write("            notification.innerHTML = `\r\n");
      out.write("                ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"alert\"></button>\r\n");
      out.write("            `;\r\n");
      out.write("            \r\n");
      out.write("            container.appendChild(notification);\r\n");
      out.write("            \r\n");
      out.write("            // Auto remove after 4 seconds\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                if (notification.parentNode) {\r\n");
      out.write("                    notification.remove();\r\n");
      out.write("                }\r\n");
      out.write("            }, 4000);\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    <!-- Final auth state verification and cleanup -->\r\n");
      out.write("    <script>\r\n");
      out.write("        window.addEventListener('load', function() {\r\n");
      out.write("            console.log('üîÑ Window loaded, performing final auth checks...');\r\n");
      out.write("            \r\n");
      out.write("            // Initialize static cart buttons first\r\n");
      out.write("            initializeStaticCartButtons();\r\n");
      out.write("            \r\n");
      out.write("            // Load new arrivals from database\r\n");
      out.write("            loadNewArrivals();\r\n");
      out.write("            \r\n");
      out.write("            // Debug auth state immediately\r\n");
      out.write("            console.log('üìä Initial Auth State Debug:');\r\n");
      out.write("            console.log('- localStorage.currentUser:', localStorage.getItem('currentUser'));\r\n");
      out.write("            console.log('- localStorage.googleUser:', localStorage.getItem('googleUser'));\r\n");
      out.write("            console.log('- localStorage.userLoggedIn:', localStorage.getItem('userLoggedIn'));\r\n");
      out.write("            console.log('- localStorage.userName:', localStorage.getItem('userName'));\r\n");
      out.write("            \r\n");
      out.write("            // Check server session immediately\r\n");
      out.write("            if (window.unifiedNavbarManager) {\r\n");
      out.write("                console.log('üîÑ Checking server auth state...');\r\n");
      out.write("                window.unifiedNavbarManager.checkAuthState();\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Clean up justLoggedIn flag after a delay\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("                if (localStorage.getItem('justLoggedIn')) {\r\n");
      out.write("                    console.log('üßπ Removing justLoggedIn flag');\r\n");
      out.write("                    localStorage.removeItem('justLoggedIn');\r\n");
      out.write("                }\r\n");
      out.write("            }, 2000);\r\n");
      out.write("            \r\n");
      out.write("            // Final unified navbar state check\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("                if (window.unifiedNavbarManager) {\r\n");
      out.write("                    console.log('üîÑ Final unified navbar refresh');\r\n");
      out.write("                    window.unifiedNavbarManager.refreshNavbar();\r\n");
      out.write("                }\r\n");
      out.write("            }, 1500);\r\n");
      out.write("            \r\n");
      out.write("            // Verify carousel integrity\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("                if (window.checkCarouselIntegrity) {\r\n");
      out.write("                    const isIntact = window.checkCarouselIntegrity();\r\n");
      out.write("                    if (!isIntact) {\r\n");
      out.write("                        console.error('‚ùå C·∫¢NH B√ÅO: Carousel c√≥ th·ªÉ ƒë√£ b·ªã thay ƒë·ªïi!');\r\n");
      out.write("                    } else {\r\n");
      out.write("                        console.log('‚úÖ Carousel v·∫´n nguy√™n v·∫πn v√† ƒë∆∞·ª£c b·∫£o v·ªá');\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }, 500);\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // DOM ready handlers\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            console.log('üì¶ DOM ready, setting up unified navbar...');\r\n");
      out.write("            \r\n");
      out.write("            // Immediate auth state debug\r\n");
      out.write("            console.log('üîç Immediate Auth Check:');\r\n");
      out.write("            console.log('- currentUser:', localStorage.getItem('currentUser'));\r\n");
      out.write("            console.log('- googleUser:', localStorage.getItem('googleUser'));\r\n");
      out.write("            console.log('- userLoggedIn:', localStorage.getItem('userLoggedIn'));\r\n");
      out.write("            \r\n");
      out.write("            // Ensure unified navbar manager is initialized\r\n");
      out.write("            if (window.unifiedNavbarManager) {\r\n");
      out.write("                setTimeout(() => {\r\n");
      out.write("                    console.log('‚ö° Manual auth state check...');\r\n");
      out.write("                    window.unifiedNavbarManager.checkAuthState();\r\n");
      out.write("                }, 100);\r\n");
      out.write("            } else {\r\n");
      out.write("                console.warn('‚ö†Ô∏è unifiedNavbarManager not found!');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
