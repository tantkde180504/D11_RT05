/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2025-07-11 01:31:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"vi\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Kết quả tìm kiếm - Gundam Hobby</title>\n");
      out.write("    \n");
      out.write("    <!-- Bootstrap CSS -->\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <!-- Font Awesome -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("    <!-- Custom CSS -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/styles.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/navbar-bg-orange.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/navbar-menu-white.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/hamburger-menu.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/navbar-fix.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/account-menu-fix.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/user-avatar.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <!-- Navigation -->\n");
      out.write("    <nav class=\"navbar navbar-expand-lg navbar-light\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <a class=\"navbar-brand d-flex align-items-center\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">\n");
      out.write("                <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/logo.png\" alt=\"Logo\" width=\"40\" height=\"40\" class=\"me-2\">\n");
      out.write("                <span class=\"fw-bold\">Gundam Hobby</span>\n");
      out.write("            </a>\n");
      out.write("\n");
      out.write("            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("            </button>\n");
      out.write("\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n");
      out.write("                <ul class=\"navbar-nav me-auto\">\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">Trang chủ</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/all-products\">Sản phẩm</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"#about\">Giới thiệu</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"#contact\">Liên hệ</a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("\n");
      out.write("                <!-- Search Form -->\n");
      out.write("                <form class=\"d-flex me-3\" id=\"headerSearchForm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/search.jsp\" method=\"get\">\n");
      out.write("                    <div class=\"input-group\">\n");
      out.write("                        <input class=\"form-control\" type=\"search\" name=\"q\" placeholder=\"Tìm kiếm sản phẩm...\" \n");
      out.write("                               value=\"");
      out.print( request.getParameter("q") != null ? request.getParameter("q") : "" );
      out.write("\" id=\"headerSearchInput\" autocomplete=\"off\">\n");
      out.write("                        <button class=\"btn btn-outline-primary\" type=\"submit\">\n");
      out.write("                            <i class=\"fas fa-search\"></i>\n");
      out.write("                        </button>\n");
      out.write("                    </div>\n");
      out.write("                    <!-- Autocomplete suggestions -->\n");
      out.write("                    <div id=\"headerSearchSuggestions\" class=\"search-suggestions\"></div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("\n");
      out.write("    <div class=\"container mt-4\">\n");
      out.write("        <h2>Kết quả tìm kiếm</h2>\n");
      out.write("        <p id=\"searchQueryDisplay\"></p>\n");
      out.write("        \n");
      out.write("        <!-- Loading -->\n");
      out.write("        <div id=\"loadingIndicator\" class=\"text-center\">\n");
      out.write("            <div class=\"spinner-border\" role=\"status\">\n");
      out.write("                <span class=\"visually-hidden\">Đang tải...</span>\n");
      out.write("            </div>\n");
      out.write("            <p class=\"mt-2\">Đang tìm kiếm sản phẩm...</p>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Products Grid -->\n");
      out.write("        <div id=\"productsContainer\" style=\"display: none;\">\n");
      out.write("            <div class=\"row\" id=\"productGrid\">\n");
      out.write("                <!-- Products will be loaded here -->\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- No Results -->\n");
      out.write("        <div id=\"noResults\" style=\"display: none;\">\n");
      out.write("            <div class=\"text-center\">\n");
      out.write("                <i class=\"fas fa-search fa-4x text-muted\"></i>\n");
      out.write("                <h4 class=\"mt-3\">Không tìm thấy sản phẩm nào</h4>\n");
      out.write("                <p>Hãy thử thay đổi từ khóa tìm kiếm</p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Bootstrap JS -->\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    \n");
      out.write("    <!-- Search Autocomplete Script -->\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/search-autocomplete.js\"></script>\n");
      out.write("    \n");
      out.write("    <script>\n");
      out.write("        // Initialize when page loads\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            // Get query from URL parameter\n");
      out.write("            const urlParams = new URLSearchParams(window.location.search);\n");
      out.write("            const query = urlParams.get('q') || '';\n");
      out.write("            \n");
      out.write("            // Display query in UI\n");
      out.write("            const queryDisplay = document.getElementById('searchQueryDisplay');\n");
      out.write("            if (query) {\n");
      out.write("                queryDisplay.innerHTML = 'Tìm kiếm cho: \"<strong>' + escapeHtml(query) + '</strong>\"';\n");
      out.write("                loadProducts(query);\n");
      out.write("            } else {\n");
      out.write("                queryDisplay.innerHTML = '';\n");
      out.write("                hideLoading();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        function loadProducts(query) {\n");
      out.write("            console.log('Loading products for query:', query);\n");
      out.write("            \n");
      out.write("            const apiUrl = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/search/api?q=' + encodeURIComponent(query) + '&size=20';\n");
      out.write("            console.log('API URL:', apiUrl);\n");
      out.write("\n");
      out.write("            fetch(apiUrl)\n");
      out.write("                .then(response => {\n");
      out.write("                    console.log('Response status:', response.status);\n");
      out.write("                    if (!response.ok) {\n");
      out.write("                        throw new Error('API request failed: ' + response.status);\n");
      out.write("                    }\n");
      out.write("                    return response.json();\n");
      out.write("                })\n");
      out.write("                .then(data => {\n");
      out.write("                    console.log('API Response:', data);\n");
      out.write("                    hideLoading();\n");
      out.write("                    \n");
      out.write("                    if (data.success && data.products) {\n");
      out.write("                        displayProducts(data.products);\n");
      out.write("                    } else {\n");
      out.write("                        showNoResults();\n");
      out.write("                    }\n");
      out.write("                })\n");
      out.write("                .catch(error => {\n");
      out.write("                    console.error('Error loading products:', error);\n");
      out.write("                    hideLoading();\n");
      out.write("                    showError(error.message);\n");
      out.write("                });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function displayProducts(products) {\n");
      out.write("            console.log('Displaying products:', products.length);\n");
      out.write("            const container = document.getElementById('productGrid');\n");
      out.write("            const productsContainer = document.getElementById('productsContainer');\n");
      out.write("            \n");
      out.write("            if (!products || products.length === 0) {\n");
      out.write("                showNoResults();\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            document.getElementById('noResults').style.display = 'none';\n");
      out.write("            productsContainer.style.display = 'block';\n");
      out.write("            \n");
      out.write("            container.innerHTML = products.map(product => {\n");
      out.write("                const imageUrl = product.imageUrl || '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/placeholder.jpg';\n");
      out.write("                const price = formatPrice(product.price);\n");
      out.write("                \n");
      out.write("                return '<div class=\"col-md-4 col-lg-3 mb-4\">' +\n");
      out.write("                    '<div class=\"card h-100\">' +\n");
      out.write("                        '<img src=\"' + imageUrl + '\" class=\"card-img-top\" alt=\"' + (product.name || '') + '\" style=\"height: 200px; object-fit: cover;\" onerror=\"this.src=\\'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/placeholder.jpg\\'\">' +\n");
      out.write("                        '<div class=\"card-body d-flex flex-column\">' +\n");
      out.write("                            '<h5 class=\"card-title\">' + (product.name || 'Tên sản phẩm') + '</h5>' +\n");
      out.write("                            '<p class=\"card-text text-danger fw-bold\">' + price + '</p>' +\n");
      out.write("                            '<div class=\"mt-auto\">' +\n");
      out.write("                                '<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/' + product.id + '\" class=\"btn btn-primary w-100\">' +\n");
      out.write("                                    '<i class=\"fas fa-eye me-2\"></i>Xem chi tiết' +\n");
      out.write("                                '</a>' +\n");
      out.write("                            '</div>' +\n");
      out.write("                        '</div>' +\n");
      out.write("                    '</div>' +\n");
      out.write("                '</div>';\n");
      out.write("            }).join('');\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function showNoResults() {\n");
      out.write("            document.getElementById('productsContainer').style.display = 'none';\n");
      out.write("            document.getElementById('noResults').style.display = 'block';\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function showError(message) {\n");
      out.write("            document.getElementById('productsContainer').style.display = 'none';\n");
      out.write("            const noResults = document.getElementById('noResults');\n");
      out.write("            noResults.style.display = 'block';\n");
      out.write("            noResults.innerHTML = \n");
      out.write("                '<div class=\"text-center\">' +\n");
      out.write("                    '<i class=\"fas fa-exclamation-triangle fa-4x text-warning\"></i>' +\n");
      out.write("                    '<h4 class=\"mt-3\">Đã xảy ra lỗi</h4>' +\n");
      out.write("                    '<p>' + message + '</p>' +\n");
      out.write("                '</div>';\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function hideLoading() {\n");
      out.write("            document.getElementById('loadingIndicator').style.display = 'none';\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function formatPrice(price) {\n");
      out.write("            return new Intl.NumberFormat('vi-VN', {\n");
      out.write("                style: 'currency',\n");
      out.write("                currency: 'VND'\n");
      out.write("            }).format(price);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function escapeHtml(text) {\n");
      out.write("            const div = document.createElement('div');\n");
      out.write("            div.textContent = text;\n");
      out.write("            return div.innerHTML;\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("    <style>\n");
      out.write("        .search-suggestions {\n");
      out.write("            position: absolute;\n");
      out.write("            top: 100%;\n");
      out.write("            left: 0;\n");
      out.write("            right: 40px;\n");
      out.write("            background: white;\n");
      out.write("            border: 1px solid #ddd;\n");
      out.write("            border-top: none;\n");
      out.write("            border-radius: 0 0 5px 5px;\n");
      out.write("            max-height: 200px;\n");
      out.write("            overflow-y: auto;\n");
      out.write("            z-index: 1000;\n");
      out.write("            display: none;\n");
      out.write("            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .suggestion-item {\n");
      out.write("            padding: 10px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            border-bottom: 1px solid #eee;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .suggestion-item:hover {\n");
      out.write("            background-color: #f8f9fa;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .suggestion-item:last-child {\n");
      out.write("            border-bottom: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .input-group {\n");
      out.write("            position: relative;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("    \n");
      out.write("    <!-- Bootstrap JS -->\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    \n");
      out.write("    <!-- Avatar Utils -->\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/avatar-utils.js\"></script>\n");
      out.write("    \n");
      out.write("    <!-- Authentication and Navbar Scripts -->\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/auth-sync.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/navbar-manager.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/google-oauth-clean.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/navbar-fix.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/hamburger-menu.js\"></script>\n");
      out.write("    \n");
      out.write("    <!-- Force check auth state after page load -->\n");
      out.write("    <script>\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            // Force check auth state multiple times to ensure sync\n");
      out.write("            setTimeout(() => {\n");
      out.write("                if (window.authSyncManager) {\n");
      out.write("                    window.authSyncManager.forceRefresh();\n");
      out.write("                }\n");
      out.write("            }, 100);\n");
      out.write("            \n");
      out.write("            setTimeout(() => {\n");
      out.write("                if (window.authSyncManager) {\n");
      out.write("                    window.authSyncManager.forceRefresh();\n");
      out.write("                }\n");
      out.write("            }, 500);\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
