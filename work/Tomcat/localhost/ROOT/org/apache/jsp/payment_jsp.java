/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2025-06-23 08:33:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Thanh toán đơn hàng</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"css/payment.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"background:#f5f5f5;\">\r\n");
      out.write("    <div class=\"container py-5\">\r\n");
      out.write("        <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-lg-7\">\r\n");
      out.write("                <div class=\"checkout-section mb-4\">\r\n");
      out.write("                    <div class=\"checkout-title\"><i class=\"fas fa-receipt me-2\"></i>Thông tin thanh toán</div>\r\n");
      out.write("                    <form id=\"checkout-form\">\r\n");
      out.write("                        <div class=\"row mb-3\">\r\n");
      out.write("                            <div class=\"col-md-6 mb-3 mb-md-0\">\r\n");
      out.write("                                <label class=\"form-label\">Họ và tên <span class=\"text-danger\">*</span></label>\r\n");
      out.write("                                <input type=\"text\" class=\"form-control\" placeholder=\"Nhập họ và tên\" required>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"col-md-6\">\r\n");
      out.write("                                <label class=\"form-label\">Số điện thoại <span class=\"text-danger\">*</span></label>\r\n");
      out.write("                                <input type=\"tel\" class=\"form-control\" placeholder=\"Nhập số điện thoại\" required>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label class=\"form-label\">Địa chỉ nhận hàng <span class=\"text-danger\">*</span></label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" placeholder=\"Nhập địa chỉ nhận hàng\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label class=\"form-label\">Ghi chú đơn hàng</label>\r\n");
      out.write("                            <textarea class=\"form-control\" rows=\"3\" placeholder=\"Ghi chú thêm (nếu có)\"></textarea>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-4 payment-method\">\r\n");
      out.write("                            <label class=\"form-label mb-2\">Phương thức thanh toán</label>\r\n");
      out.write("                            <div class=\"form-check\">\r\n");
      out.write("                                <input class=\"form-check-input\" type=\"radio\" name=\"payment\" id=\"cod\" checked>\r\n");
      out.write("                                <label class=\"form-check-label\" for=\"cod\">\r\n");
      out.write("                                    Thanh toán khi nhận hàng (COD)\r\n");
      out.write("                                </label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"form-check\">\r\n");
      out.write("                                <input class=\"form-check-input\" type=\"radio\" name=\"payment\" id=\"bank\">\r\n");
      out.write("                                <label class=\"form-check-label\" for=\"bank\">\r\n");
      out.write("                                    Chuyển khoản ngân hàng\r\n");
      out.write("                                </label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div id=\"qr-section\" class=\"mt-3\" style=\"display:none;\">\r\n");
      out.write("                                <div class=\"alert alert-info py-2 mb-2\">\r\n");
      out.write("                                    Vui lòng quét mã QR bên dưới để chuyển khoản thanh toán.\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <img src=\"https://img.vietqr.io/image/VCB-0123456789-compact2.jpg\"\r\n");
      out.write("                                    alt=\"QR chuyển khoản\" style=\"max-width:220px;display:block;margin:auto;\">\r\n");
      out.write("                                <div class=\"text-center mt-2 small text-muted\">Nội dung chuyển khoản:\r\n");
      out.write("                                    <b>ThanhToanDonHang</b>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-danger w-100 py-2 fs-5\">Đặt hàng</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-lg-5\">\r\n");
      out.write("                <div class=\"order-summary shadow-sm mb-4\">\r\n");
      out.write("                    <h5 class=\"mb-3\"><i class=\"fas fa-list-ul me-2\"></i>Đơn hàng của bạn</h5>\r\n");
      out.write("                    <div id=\"order-summary-list\">\r\n");
      out.write("                        <div class=\"text-muted\">Đang tải giỏ hàng...</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <a href=\"cart.jsp\" class=\"btn btn-outline-secondary w-100\"><i class=\"fas fa-arrow-left me-1\"></i>Quay lại giỏ hàng</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Modal Thanh toán thành công -->\r\n");
      out.write("    <div class=\"modal fade\" id=\"successModal\" tabindex=\"-1\" aria-labelledby=\"successModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("        <div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("            <div class=\"modal-content text-center\">\r\n");
      out.write("                <div class=\"modal-header border-0\">\r\n");
      out.write("                    <h5 class=\"modal-title w-100\" id=\"successModalLabel\">Thanh toán thành công!</h5>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <i class=\"fas fa-check-circle fa-4x text-success mb-3\"></i>\r\n");
      out.write("                    <p class=\"mb-4\">Cảm ơn bạn đã đặt hàng. Đơn hàng của bạn đã được ghi nhận.</p>\r\n");
      out.write("                    <div class=\"d-grid gap-2\">\r\n");
      out.write("                        <a href=\"index.jsp\" class=\"btn btn-primary\">Quay về trang chủ</a>\r\n");
      out.write("                        <a href=\"order.jsp\" class=\"btn btn-outline-secondary\">Đơn hàng</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    const codRadio = document.getElementById('cod');\r\n");
      out.write("    const bankRadio = document.getElementById('bank');\r\n");
      out.write("    const qrSection = document.getElementById('qr-section');\r\n");
      out.write("    const checkoutForm = document.getElementById('checkout-form');\r\n");
      out.write("\r\n");
      out.write("    function toggleQR() {\r\n");
      out.write("        qrSection.style.display = bankRadio.checked ? 'block' : 'none';\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    codRadio.addEventListener('change', toggleQR);\r\n");
      out.write("    bankRadio.addEventListener('change', toggleQR);\r\n");
      out.write("    toggleQR();\r\n");
      out.write("\r\n");
      out.write("    checkoutForm.addEventListener('submit', async function(e) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        // Lấy dữ liệu form\r\n");
      out.write("        const fullName = checkoutForm.querySelector('input[placeholder=\"Nhập họ và tên\"]').value.trim();\r\n");
      out.write("        const phone = checkoutForm.querySelector('input[placeholder=\"Nhập số điện thoại\"]').value.trim();\r\n");
      out.write("        const address = checkoutForm.querySelector('input[placeholder=\"Nhập địa chỉ nhận hàng\"]').value.trim();\r\n");
      out.write("        const note = checkoutForm.querySelector('textarea').value.trim();\r\n");
      out.write("        const paymentMethod = bankRadio.checked ? 'VNPAY' : 'COD';\r\n");
      out.write("\r\n");
      out.write("        // Gửi dữ liệu lên backend (KHÔNG gửi cartItems)\r\n");
      out.write("        const payload = {\r\n");
      out.write("            fullName, phone, address, note, paymentMethod\r\n");
      out.write("        };\r\n");
      out.write("        fetch('/api/payment', {\r\n");
      out.write("            method: 'POST',\r\n");
      out.write("            headers: { 'Content-Type': 'application/json' },\r\n");
      out.write("            body: JSON.stringify(payload)\r\n");
      out.write("        })\r\n");
      out.write("        .then(res => res.json())\r\n");
      out.write("        .then(data => {\r\n");
      out.write("            if (data.success) {\r\n");
      out.write("                const successModal = new bootstrap.Modal(document.getElementById('successModal'));\r\n");
      out.write("                successModal.show();\r\n");
      out.write("            } else {\r\n");
      out.write("                alert(data.message || 'Đặt hàng thất bại!');\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("        .catch(() => alert('Lỗi kết nối máy chủ!'));\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Render order summary\r\n");
      out.write("    async function renderOrderSummary() {\r\n");
      out.write("        const orderSummaryList = document.getElementById('order-summary-list');\r\n");
      out.write("        let cartItems = [];\r\n");
      out.write("        let grandTotal = 0;\r\n");
      out.write("        // Ưu tiên lấy cart từ localStorage nếu có\r\n");
      out.write("        if (localStorage.getItem('cartItems')) {\r\n");
      out.write("            try {\r\n");
      out.write("                cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];\r\n");
      out.write("                grandTotal = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n");
      out.write("            } catch (e) { cartItems = []; grandTotal = 0; }\r\n");
      out.write("        } else {\r\n");
      out.write("            // Nếu không có localStorage thì lấy từ API\r\n");
      out.write("            try {\r\n");
      out.write("                const resp = await fetch('/api/cart', { headers: { 'Accept': 'application/json' } });\r\n");
      out.write("                const data = await resp.json();\r\n");
      out.write("                if (data.success) {\r\n");
      out.write("                    cartItems = data.cartItems;\r\n");
      out.write("                    grandTotal = data.grandTotal;\r\n");
      out.write("                }\r\n");
      out.write("            } catch (err) {}\r\n");
      out.write("        }\r\n");
      out.write("        if (!cartItems.length) {\r\n");
      out.write("            orderSummaryList.innerHTML = '<div class=\"text-danger\">Giỏ hàng trống!</div>';\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        let html = '';\r\n");
      out.write("        cartItems.forEach(item => {\r\n");
      out.write("            html += '<div class=\"d-flex justify-content-between mb-2\">'\r\n");
      out.write("                + '<span>' + (item.productName || item.name) + ' x ' + item.quantity + '</span>'\r\n");
      out.write("                + '<span>' + formatCurrency(item.price * item.quantity) + '₫</span>'\r\n");
      out.write("                + '</div>';\r\n");
      out.write("        });\r\n");
      out.write("        html += '<hr>';\r\n");
      out.write("        html += '<div class=\"d-flex justify-content-between mb-2\">'\r\n");
      out.write("            + '<span class=\"fw-bold\">Tạm tính</span>'\r\n");
      out.write("            + '<span class=\"fw-bold\">' + formatCurrency(grandTotal) + '₫</span>'\r\n");
      out.write("            + '</div>';\r\n");
      out.write("        html += '<div class=\"d-flex justify-content-between mb-2\">'\r\n");
      out.write("            + '<span>Phí vận chuyển</span>'\r\n");
      out.write("            + '<span>Miễn phí</span>'\r\n");
      out.write("            + '</div>';\r\n");
      out.write("        html += '<hr>';\r\n");
      out.write("        html += '<div class=\"d-flex justify-content-between mb-2\">'\r\n");
      out.write("            + '<span class=\"fw-bold text-danger\">Tổng cộng</span>'\r\n");
      out.write("            + '<span class=\"fw-bold fs-5 text-danger\">' + formatCurrency(grandTotal) + '₫</span>'\r\n");
      out.write("            + '</div>';\r\n");
      out.write("        orderSummaryList.innerHTML = html;\r\n");
      out.write("    }\r\n");
      out.write("    function formatCurrency(num) {\r\n");
      out.write("        return num.toLocaleString('vi-VN');\r\n");
      out.write("    }\r\n");
      out.write("    renderOrderSummary();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
